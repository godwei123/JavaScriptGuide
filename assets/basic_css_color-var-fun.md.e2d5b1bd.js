import{_ as s,c as a,o as n,V as l}from"./chunks/framework.25f281e8.js";const p="/javascript-guide/assets/1642248277904-d94d7f96-25f0-41a8-9bef-dd59c885b0d0.57469c05.png",o="/javascript-guide/assets/1642249237927-1a75eb9d-b70e-4ec6-a8a3-68ba04837a0c.8d4e9b88.png",e="/javascript-guide/assets/1642249257097-6467c98a-ff17-404c-b6fc-e268099f9bd6.80256706.png",u=JSON.parse('{"title":"CSS","description":"","frontmatter":{},"headers":[],"relativePath":"basic/css/color-var-fun.md","filePath":"basic/css/color-var-fun.md"}'),t={name:"basic/css/color-var-fun.md"},c=l(`<h1 id="css" tabindex="-1">CSS <a class="header-anchor" href="#css" aria-label="Permalink to &quot;CSS&quot;">​</a></h1><h2 id="css-常见颜色格式" tabindex="-1">CSS 常见颜色格式 <a class="header-anchor" href="#css-常见颜色格式" aria-label="Permalink to &quot;CSS 常见颜色格式&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">案例链接</p><p>// todo</p></div><blockquote><p>设置元素的文本或装饰的颜色。 CSS 基本数据类型 <code>&lt;color&gt;</code></p></blockquote><h3 id="hex" tabindex="-1"><code>Hex</code> <a class="header-anchor" href="#hex" aria-label="Permalink to &quot;\`Hex\`&quot;">​</a></h3><blockquote><p>以<code>“#”</code>加十六进制</p></blockquote><h3 id="十六进制符号-rrggbb-aa" tabindex="-1">十六进制符号：<code>#RRGGBB[AA]</code> <a class="header-anchor" href="#十六进制符号-rrggbb-aa" aria-label="Permalink to &quot;十六进制符号：\`#RRGGBB[AA]\`&quot;">​</a></h3><p>R（红）、G（绿）、B （蓝）和 A （alpha）是十六进制字符（0–9、A–F）。A 是可选的。比如，#ff0000 等价于#ff0000ff。</p><h3 id="十六进制符号-rgb-a" tabindex="-1">十六进制符号：<code>#RGB[A]</code> <a class="header-anchor" href="#十六进制符号-rgb-a" aria-label="Permalink to &quot;十六进制符号：\`#RGB[A]\`&quot;">​</a></h3><p>R（红）、G（绿）、B （蓝）和 A （alpha）是十六进制字符（0–9、A–F）。A 是可选的。三位数符号（#RGB）是六位数形式（#RRGGBB）的减缩版。比如，#f09 和#ff0099 表示同一颜色。类似地，四位数符号（#RGBA）是八位数形式（#RRGGBBAA）的减缩版。比如，#0f38 和#00ff3388 表示相同颜色。</p><div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">/* 十六进制语法 */</span></span>
<span class="line"><span style="color:#A6ACCD;">#f09</span></span>
<span class="line"><span style="color:#A6ACCD;">#F09</span></span>
<span class="line"><span style="color:#A6ACCD;">#ff0099</span></span>
<span class="line"><span style="color:#A6ACCD;">#FF0099</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">/* 带有 alpha 值的十六进制语法 */</span></span>
<span class="line"><span style="color:#A6ACCD;">#f09f</span></span>
<span class="line"><span style="color:#A6ACCD;">#F09F</span></span>
<span class="line"><span style="color:#A6ACCD;">#ff0099ff</span></span>
<span class="line"><span style="color:#A6ACCD;">#FF0099FF</span></span></code></pre></div><h3 id="rgb" tabindex="-1"><code>RGB</code> <a class="header-anchor" href="#rgb" aria-label="Permalink to &quot;\`RGB\`&quot;">​</a></h3><p>颜色可以使用红 - 绿 - 蓝（red-green-blue (RGB)）</p><blockquote><p><code>rgb()</code> 和 <code>rgba()</code> 函数表达式的形式 每种颜色使用 0 到 255 之间的数字指定。 最常见的 RGB 值黑色：rgb(0,0,0) 和白色：rgb(255,255,255)。</p></blockquote><h4 id="rgb-a-r-g-b-a" tabindex="-1"><code>rgb[a](R, G, B[, A])</code> <a class="header-anchor" href="#rgb-a-r-g-b-a" aria-label="Permalink to &quot;\`rgb[a](R, G, B[, A])\`&quot;">​</a></h4><p>R（红）、G（绿）、B （蓝）可以是<code>&lt;number&gt;</code>（数字），或者<code>&lt;percentage&gt;</code>（百分比），255 相当于 100%。A（alpha）可以是 0 到 1 之间的数字，或者百分比，数字 1 相当于 100%（完全不透明）。</p><h4 id="rgb-a-r-g-b-a-1" tabindex="-1"><code>rgb[a](R G B[ / A])</code> <a class="header-anchor" href="#rgb-a-r-g-b-a-1" aria-label="Permalink to &quot;\`rgb[a](R G B[ / A])\`&quot;">​</a></h4><p>R（红）、G（绿）、B （蓝）可以是<code>&lt;number&gt;</code>（数字），或者<code>&lt;percentage&gt;</code>（百分比），255 相当于 100%。A（alpha）可以是 0 到 1 之间的数字，或者百分比，数字 1 相当于 100%（完全不透明）。</p><p><strong>注意：</strong> 不要混用数字和百分比</p><div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">/* 函数语法 */</span></span>
<span class="line"><span style="color:#A6ACCD;">rgb(255,0,153)</span></span>
<span class="line"><span style="color:#A6ACCD;">rgb(255, 0, 153)</span></span>
<span class="line"><span style="color:#A6ACCD;">rgb(255, 0, 153.0)</span></span>
<span class="line"><span style="color:#A6ACCD;">rgb(100%,0%,60%)</span></span>
<span class="line"><span style="color:#A6ACCD;">rgb(100%, 0%, 60%)</span></span>
<span class="line"><span style="color:#A6ACCD;">rgb(100%, 0, 60%) /* 错误：不要混用数字和百分比 */</span></span>
<span class="line"><span style="color:#A6ACCD;">rgb(255 0 153)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">/* 带有 alpha 值的函数语法 */</span></span>
<span class="line"><span style="color:#A6ACCD;">rgb(255, 0, 153, 1)</span></span>
<span class="line"><span style="color:#A6ACCD;">rgb(255, 0, 153, 100%)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">/* 空格语法 */</span></span>
<span class="line"><span style="color:#A6ACCD;">rgb(255 0 153 / 1)</span></span>
<span class="line"><span style="color:#A6ACCD;">rgb(255 0 153 / 100%)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">/* 带有浮点值的函数语法 */</span></span>
<span class="line"><span style="color:#A6ACCD;">rgb(255, 0, 153.6, 1)</span></span>
<span class="line"><span style="color:#A6ACCD;">rgb(1e2, .5e1, .5e0, +.25e2%)</span></span></code></pre></div><h3 id="named-color" tabindex="-1"><code>named-color</code> <a class="header-anchor" href="#named-color" aria-label="Permalink to &quot;\`named-color\`&quot;">​</a></h3><blockquote><p>关键字，如 blue，transparent</p></blockquote><p>颜色关键字（color keywords）是不区分大小写的标识符，它表示一个具体的颜色，例如 red、blue、brown 或者 lightseagreen 。尽管名称或多或少描述了分别的颜色，但必定是人工的，其后没有严格的标准。</p><p>所有预定义颜色名称：<a href="https://www.w3schools.com/colors/colors_names.asp" target="_blank" rel="noreferrer">https://www.w3schools.com/colors/colors_names.asp</a></p><h4 id="transparent" tabindex="-1">transparent <a class="header-anchor" href="#transparent" aria-label="Permalink to &quot;transparent&quot;">​</a></h4><p>transparent 关键字表示一个完全透明的颜色，即该颜色看上去将是背景色。从技术上说，它是带有阿尔法通道为最小值的黑色，是 rgba(0,0,0,0) 的简写。</p><h4 id="currentcolor-关键字" tabindex="-1">currentColor 关键字 <a class="header-anchor" href="#currentcolor-关键字" aria-label="Permalink to &quot;currentColor 关键字&quot;">​</a></h4><p>currentColor 表示当前的颜色。如果没有指定，就会从父容器继承的文本颜色。</p><p>currentColor 关键字代表原始的 color 属性的计算值。它允许让继承自属性或子元素的属性颜色属性以默认值不再继承。</p><p>它也能用于那些继承了元素的 color 属性计算值的属性，相当于在这些元素上使用 inherit 关键字，如果这些元素有该关键字的话。</p><p>该属性在 SVG 中使用时很方便，可以将指定的填充或描边颜色设置为 currentColor，以确保 SVG 颜色与其父级的文本颜色匹配。</p><h3 id="hsl" tabindex="-1"><code>HSL</code> <a class="header-anchor" href="#hsl" aria-label="Permalink to &quot;\`HSL\`&quot;">​</a></h3><p>颜色也可以使用 hsl() 函数符被定义为色相 - 饱和度 - 亮度（Hue-saturation-lightness）模式。HSL 相比 RGB 的优点是更加直观：你可以估算你想要的颜色，然后微调。它也更易于创建相称的颜色集合。（通过保持相同的色相并改变亮度/暗度和饱和度）。</p><blockquote><p>以 <code>hsl()</code> 和 <code>hsla()</code> 函数表达式的形式 参数形式同 RGB/RGBA</p></blockquote><h4 id="色相-hue" tabindex="-1">色相 Hue <a class="header-anchor" href="#色相-hue" aria-label="Permalink to &quot;色相 Hue&quot;">​</a></h4><p>色相描述了色轮上的值，从 0 到 360 度，从红色开始（0 和 360），参数还可以接角度单位 turn（圈）和无单位</p><p><img src="`+p+'" alt="Hue"></p><h4 id="饱和度-saturation" tabindex="-1">饱和度 Saturation <a class="header-anchor" href="#饱和度-saturation" aria-label="Permalink to &quot;饱和度 Saturation&quot;">​</a></h4><p>饱和度是所选色调的鲜艳程度，100% 表示完全饱和的亮色，0% 表示完全不饱和的灰色；</p><p><img src="'+o+'" alt="image.png"></p><h4 id="亮度-lightness" tabindex="-1">亮度 Lightness <a class="header-anchor" href="#亮度-lightness" aria-label="Permalink to &quot;亮度 Lightness&quot;">​</a></h4><p>颜色的亮度级别，较低的值会更暗，更接近黑色，较高的值会更亮，更接近白色。</p><p><img src="'+e+`" alt="image.png"></p><div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">/* 以下示例都表示同一颜色：a lavender */</span></span>
<span class="line"><span style="color:#A6ACCD;">hsl(270,60%,70%)</span></span>
<span class="line"><span style="color:#A6ACCD;">hsl(270, 60%, 70%)</span></span>
<span class="line"><span style="color:#A6ACCD;">hsl(270 60% 70%)</span></span>
<span class="line"><span style="color:#A6ACCD;">hsl(270deg, 60%, 70%)</span></span>
<span class="line"><span style="color:#A6ACCD;">hsl(4.71239rad, 60%, 70%)</span></span>
<span class="line"><span style="color:#A6ACCD;">hsl(.75turn, 60%, 70%)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">/* 以下示例都表示同一颜色：a lavender that is 15% opaque. */</span></span>
<span class="line"><span style="color:#A6ACCD;">hsl(270, 60%, 50%, .15)</span></span>
<span class="line"><span style="color:#A6ACCD;">hsl(270, 60%, 50%, 15%)</span></span>
<span class="line"><span style="color:#A6ACCD;">hsl(270 60% 50% / .15)</span></span>
<span class="line"><span style="color:#A6ACCD;">hsl(270 60% 50% / 15%)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">hsla(240, 100%, 50%, .05)     /*   5% opaque blue */</span></span>
<span class="line"><span style="color:#A6ACCD;">hsla(240, 100%, 50%, .4)      /*  40% opaque blue */</span></span>
<span class="line"><span style="color:#A6ACCD;">hsla(240, 100%, 50%, .7)      /*  70% opaque blue */</span></span>
<span class="line"><span style="color:#A6ACCD;">hsla(240, 100%, 50%, 1)       /* full opaque blue */</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">/* Whitespace syntax */</span></span>
<span class="line"><span style="color:#A6ACCD;">hsla(240 100% 50% / .05)      /*   5% opaque blue */</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">/* Percentage value for alpha */</span></span>
<span class="line"><span style="color:#A6ACCD;">hsla(240 100% 50% / 5%)       /*   5% opaque blue */</span></span></code></pre></div><h3 id="全局" tabindex="-1">全局 <a class="header-anchor" href="#全局" aria-label="Permalink to &quot;全局&quot;">​</a></h3><ul><li><code>color: inherit;</code></li><li><code>color: initial;</code></li><li><code>color: unset;</code></li></ul><h2 id="css-变量" tabindex="-1">CSS 变量 <a class="header-anchor" href="#css-变量" aria-label="Permalink to &quot;CSS 变量&quot;">​</a></h2><p>带有前缀<code>--</code>的属性名，比如<code>--example--name</code>，表示的是带有值的自定义属性，其可以通过 var 函数在全文档范围内复用的。</p><p>CSS 自定义属性是可以级联的：每一个自定义属性可以多次出现，并且变量的值将会借助级联算法和自定义属性值运算出来。</p><h3 id="基本使用" tabindex="-1">基本使用 <a class="header-anchor" href="#基本使用" aria-label="Permalink to &quot;基本使用&quot;">​</a></h3><p>声明一个自定义属性，属性名需要以两个减号（--）开始，属性值则可以是任何有效的 CSS 值。和其他属性一样，自定义属性也是写在规则集之内的。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">element</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  --main-bg-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">#</span><span style="color:#A6ACCD;">ccc</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">root</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  --main-bg-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">#</span><span style="color:#A6ACCD;">ccc</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p><strong>备注：</strong></p><ul><li>自定义属性名是大小写敏感的，--my-color 和 --My-color 会被认为是两个不同的自定义属性。</li><li>CSS 变量不能是属性名</li><li>避免循环依赖</li></ul><h3 id="继承性" tabindex="-1">继承性 <a class="header-anchor" href="#继承性" aria-label="Permalink to &quot;继承性&quot;">​</a></h3><p>自定义属性会继承。这意味着如果在一个给定的元素上，没有为这个自定义属性设置值，在其父元素上的值会被使用。</p><p>局部作用域是优先于全局作用域的。</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">one</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">two</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">three</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">four</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">two</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  --test</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">three</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  --test</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2em</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>在这个情况下， var(--test) 的结果分别是：</p><ul><li>对于元素 class=&quot;two&quot; ：10px</li><li>对于元素 class=&quot;three&quot; ：2em</li><li>对于元素 class=&quot;four&quot; ：10px （继承自父属性）</li><li>对于元素 class=&quot;one&quot; ：非法值，会变成自定义属性的默认值</li></ul><p>注意，这些是自定义属性，并不是你在其他编程语言中遇到的实际的变量。这些值仅当需要的时候才会计算，而并不会按其他规则进行保存。比如，你不能为元素设置一个属性，然后让它从兄弟或旁支子孙规则上获取值。属性仅用于匹配当前选择器及其子孙，这和通常的 CSS 是一样的。</p><h3 id="var-函数" tabindex="-1">var 函数 <a class="header-anchor" href="#var-函数" aria-label="Permalink to &quot;var 函数&quot;">​</a></h3><p>用 var() 函数可以定义多个备用值(fallback value)，当给定值未定义时将会用备用值替换。这对于 Custom Elements 和 Shadow DOM 都很有用。</p><p>备注： 备用值并不是用于实现浏览器兼容性的。如果浏览器不支持 CSS 自定义属性，备用值也没什么用。它仅对支持 CSS 自定义属性的浏览器提供了一个备份机制，该机制仅当给定值未定义或是无效值的时候生效。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">two</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">var</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">--test</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> red</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">background-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">var</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">--my-var</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">var</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">--my-background</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> pink</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="有效性和值" tabindex="-1">有效性和值 <a class="header-anchor" href="#有效性和值" aria-label="Permalink to &quot;有效性和值&quot;">​</a></h3><p>传统的 CSS 概念里，有效性和属性是绑定的，这对自定义属性来说并不适用。当自定义属性值被解析，浏览器不知道它们什么时候会被使用，所以必须认为这些值都是有效的。</p><p>不幸的是，即便这些值是有效的，但当通过 var() 函数调用时，它在特定上下文环境下也可能不会奏效。属性和自定义变量会导致无效的 CSS 语句，这引入了一个新的概念：计算时有效性。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">root</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  --text-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">16px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#FFCB6B;">p</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> blue</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#FFCB6B;">p</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">var</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">--text-color</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>毫不意外，浏览器将 --text-color 的值替换给了 var(--text-color)，但是 16px 并不是 color 的合法属性值。代换之后，该属性不会产生任何作用。浏览器会执行如下两个步骤：</p><p>检查属性 color 是否为继承属性。是，但是 <code>&lt;p&gt;</code> 没有任何父元素定义了 color 属性。转到下一步。 将该值设置为它的默认初始值，比如 black。</p><p><strong>备注：</strong> 当 CSS 属性 - 值对中存在语法错误，该行则会被忽略。然而如果自定义属性的值无效，它并不会被忽略，从而会导致该值被覆盖为默认值。</p><p>对于 CSS 变量的备用值，在替换的过程中，会有四种可能：</p><ul><li>浏览器不支持 CSS 变量，带有 var()的代码行将会被忽略，将使用浏览器的默认值；</li><li>浏览器支持变量，并且该变量设置为正确值，则直接使用该变量；</li><li>浏览器支持变量，并且变量未设置为任何值，则直接使用备用值；</li><li>浏览器支持变量，并且该变量设置为无效值，则使用浏览器的默认值。</li></ul><h3 id="javascript-操作-css-变量" tabindex="-1">JavaScript 操作 CSS 变量 <a class="header-anchor" href="#javascript-操作-css-变量" aria-label="Permalink to &quot;JavaScript 操作 CSS 变量&quot;">​</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 获取一个 Dom 节点上的 CSS 变量</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &lt;p style=&quot;--my-var: red&quot;&gt;&lt;/p&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">element</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">style</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getPropertyValue</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">--my-var</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 获取任意 Dom 节点上的 CSS 变量</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// p { --my-var: red;}</span></span>
<span class="line"><span style="color:#82AAFF;">getComputedStyle</span><span style="color:#A6ACCD;">(element)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getPropertyValue</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">--my-var</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 修改一个 Dom 节点上的 CSS 变量</span></span>
<span class="line"><span style="color:#A6ACCD;">element</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">style</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setProperty</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">--my-var</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> jsVar </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="css-变量应用" tabindex="-1">CSS 变量应用 <a class="header-anchor" href="#css-变量应用" aria-label="Permalink to &quot;CSS 变量应用&quot;">​</a></h3><blockquote><p>封装一个按钮，通过传入不同的 type，显示不同的颜色。</p></blockquote><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">btn</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">data-type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">primary</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">按钮一</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">btn</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">data-type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">danger</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">按钮二</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">btn</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">data-type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">success</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">按钮三</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">root</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  --btn-primary</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">#</span><span style="color:#A6ACCD;">4e7bea</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  --btn-danger</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">#</span><span style="color:#A6ACCD;">f31818</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  --btn-success</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">#</span><span style="color:#A6ACCD;">43f848</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">btn</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">padding</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10px</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">20px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> black</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#FFCB6B;">button</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">btn</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">primary</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">background-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">var</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">--btn-primary</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#FFCB6B;">button</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">btn</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">danger</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">background-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">var</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">--btn-danger</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#FFCB6B;">button</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">btn</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">success</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">background-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">var</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">--btn-success</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> elements </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">querySelectorAll</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">.btn</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> (</span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> ele </span><span style="color:#89DDFF;">of</span><span style="color:#A6ACCD;"> elements) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">type</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ele</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">dataset</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">type</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">ele</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">classList</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">type</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="css-函数" tabindex="-1">CSS 函数 <a class="header-anchor" href="#css-函数" aria-label="Permalink to &quot;CSS 函数&quot;">​</a></h2><h3 id="calc" tabindex="-1">calc <a class="header-anchor" href="#calc" aria-label="Permalink to &quot;calc&quot;">​</a></h3><h3 id="min" tabindex="-1">min <a class="header-anchor" href="#min" aria-label="Permalink to &quot;min&quot;">​</a></h3><h3 id="max" tabindex="-1">max <a class="header-anchor" href="#max" aria-label="Permalink to &quot;max&quot;">​</a></h3><h3 id="clamp" tabindex="-1">clamp <a class="header-anchor" href="#clamp" aria-label="Permalink to &quot;clamp&quot;">​</a></h3>`,87),r=[c];function D(y,F,i,C,A,d){return n(),a("div",null,r)}const b=s(t,[["render",D]]);export{u as __pageData,b as default};
