import{_ as s,c as n,o as a,Q as p}from"./chunks/framework.00751356.js";const v=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"basic/browser/移动端适配.md","filePath":"basic/browser/移动端适配.md"}'),o={name:"basic/browser/移动端适配.md"},l=p(`<h2 id="移动端适配" tabindex="-1">移动端适配 <a class="header-anchor" href="#移动端适配" aria-label="Permalink to &quot;移动端适配&quot;">​</a></h2><p>em\\rem</p><h2 id="viewport" tabindex="-1">viewport <a class="header-anchor" href="#viewport" aria-label="Permalink to &quot;viewport&quot;">​</a></h2><p>viewport<code>翻译成中文的意思大致是视图、视窗。在移动端设备中,整块显示屏就相当于视图、视窗。但这种说法也并不完全正确。因为在移动端设备中,浏览器视图并不是整个屏幕。因此</code>viewport<code>又被分为了3种 </code>layout viewport<code>、</code>visual viewport<code>、</code>ideal viewport.</p><p>为了能够适配到 pc 端开发页面中,大部分浏览器把<code>viewport</code>的宽度设为了<code>980px</code> 这个浏览器默认设置的视图被称为 <code>layout viewport</code>。我们可以<strong>使用<code>document.documentElement.clientWidth</code> 来获取。</strong></p><p>由于 <code>layout viewport</code>的宽度是远大于浏览器宽度的，因此我们需要一个新的<code>viewport</code>来代表浏览器的可视区域宽度，这个视图则被称为<code>visual viewport</code>我们可以<strong>使用<code>window.innerWidth</code>来获取。</strong></p><p>现在我们已经有两个<code>viewport</code>了,<code>layout viewport</code> 和 <code>visual viewport</code>。但浏览器觉得还不够，因为现在越来越多的网站都会为移动设备进行单独的设计，所以必须还要有一个能完美适配移动设备的<code>ideal viewport</code>。<code>ideal viewport</code> 并没有一个固定的尺寸，不同的设备拥有不同的 <code>ideal viewport</code>。比如<code>iphone5</code>的 <code>ideal viewport</code>是 320px 而 <code>iphone6s</code>的 <code>ideal viewport</code>却是 375px</p><p>vw、vh<code>将</code>viewport<code>分成了一百份。vw即 </code>viewport width<code> vh即</code>viewport height</p><ul><li>1vw 等于视图单位的 1%的宽度</li><li>1vh 等于视图单位的 1%的高度</li></ul><p>要使用<code>viewport</code>适配 我们必须安装<code>postcss-px-to-viewport</code>这个包。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//postcss.config.js</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  plugins: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;postcss-px-to-viewport&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      unitToConvert: </span><span style="color:#9ECBFF;">&quot;px&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 要转化的单位</span></span>
<span class="line"><span style="color:#E1E4E8;">      viewportWidth: </span><span style="color:#79B8FF;">375</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// UI设计稿的宽度</span></span>
<span class="line"><span style="color:#E1E4E8;">      unitPrecision: </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 转换后的精度，即小数点位数</span></span>
<span class="line"><span style="color:#E1E4E8;">      propList: [</span><span style="color:#9ECBFF;">&quot;*&quot;</span><span style="color:#E1E4E8;">], </span><span style="color:#6A737D;">// 指定转换的css属性的单位，*代表全部css属性的单位都进行转换</span></span>
<span class="line"><span style="color:#E1E4E8;">      viewportUnit: </span><span style="color:#9ECBFF;">&quot;vw&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 指定需要转换成的视窗单位，默认vw</span></span>
<span class="line"><span style="color:#E1E4E8;">      fontViewportUnit: </span><span style="color:#9ECBFF;">&quot;vw&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 指定字体需要转换成的视窗单位，默认vw      selectorBlackList: [&quot;wrap&quot;], // 指定不转换为视窗单位的类名，</span></span>
<span class="line"><span style="color:#E1E4E8;">      minPixelValue: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 默认值1，小于或等于1px则不进行转换</span></span>
<span class="line"><span style="color:#E1E4E8;">      mediaQuery: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 是否在媒体查询的css代码中也进行转换，默认false</span></span>
<span class="line"><span style="color:#E1E4E8;">      replace: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 是否转换后直接更换属性值</span></span>
<span class="line"><span style="color:#E1E4E8;">      exclude: [</span><span style="color:#9ECBFF;">/</span><span style="color:#DBEDFF;">node_modules</span><span style="color:#9ECBFF;">/</span><span style="color:#E1E4E8;">], </span><span style="color:#6A737D;">// 设置忽略文件，用正则做目录名匹配</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//postcss.config.js</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  plugins: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;postcss-px-to-viewport&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">      unitToConvert: </span><span style="color:#032F62;">&quot;px&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 要转化的单位</span></span>
<span class="line"><span style="color:#24292E;">      viewportWidth: </span><span style="color:#005CC5;">375</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// UI设计稿的宽度</span></span>
<span class="line"><span style="color:#24292E;">      unitPrecision: </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 转换后的精度，即小数点位数</span></span>
<span class="line"><span style="color:#24292E;">      propList: [</span><span style="color:#032F62;">&quot;*&quot;</span><span style="color:#24292E;">], </span><span style="color:#6A737D;">// 指定转换的css属性的单位，*代表全部css属性的单位都进行转换</span></span>
<span class="line"><span style="color:#24292E;">      viewportUnit: </span><span style="color:#032F62;">&quot;vw&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 指定需要转换成的视窗单位，默认vw</span></span>
<span class="line"><span style="color:#24292E;">      fontViewportUnit: </span><span style="color:#032F62;">&quot;vw&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 指定字体需要转换成的视窗单位，默认vw      selectorBlackList: [&quot;wrap&quot;], // 指定不转换为视窗单位的类名，</span></span>
<span class="line"><span style="color:#24292E;">      minPixelValue: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 默认值1，小于或等于1px则不进行转换</span></span>
<span class="line"><span style="color:#24292E;">      mediaQuery: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 是否在媒体查询的css代码中也进行转换，默认false</span></span>
<span class="line"><span style="color:#24292E;">      replace: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 是否转换后直接更换属性值</span></span>
<span class="line"><span style="color:#24292E;">      exclude: [</span><span style="color:#032F62;">/node_modules/</span><span style="color:#24292E;">], </span><span style="color:#6A737D;">// 设置忽略文件，用正则做目录名匹配</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><h3 id="解决第三方组件库兼容问题" tabindex="-1">解决第三方组件库兼容问题 <a class="header-anchor" href="#解决第三方组件库兼容问题" aria-label="Permalink to &quot;解决第三方组件库兼容问题&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// postcss.config.js</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">path</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;path&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ({ </span><span style="color:#FFAB70;">webpack</span><span style="color:#E1E4E8;"> }) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">viewWidth</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> webpack.resourcePath.</span><span style="color:#B392F0;">includes</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    path.</span><span style="color:#B392F0;">join</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;node_modules&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;vant&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  )</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">375</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">750</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    plugins: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      autoprefixer: {},</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;postcss-px-to-viewport&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        unitToConvert: </span><span style="color:#9ECBFF;">&quot;px&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        viewportWidth: viewWidth,</span></span>
<span class="line"><span style="color:#E1E4E8;">        unitPrecision: </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        propList: [</span><span style="color:#9ECBFF;">&quot;*&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">        viewportUnit: </span><span style="color:#9ECBFF;">&quot;vw&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        fontViewportUnit: </span><span style="color:#9ECBFF;">&quot;vw&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        selectorBlackList: [],</span></span>
<span class="line"><span style="color:#E1E4E8;">        minPixelValue: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        mediaQuery: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        exclude: [],</span></span>
<span class="line"><span style="color:#E1E4E8;">        landscape: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      },</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">  };</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// postcss.config.js</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">path</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;path&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ({ </span><span style="color:#E36209;">webpack</span><span style="color:#24292E;"> }) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">viewWidth</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> webpack.resourcePath.</span><span style="color:#6F42C1;">includes</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    path.</span><span style="color:#6F42C1;">join</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;node_modules&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;vant&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  )</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">375</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">750</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    plugins: {</span></span>
<span class="line"><span style="color:#24292E;">      autoprefixer: {},</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;postcss-px-to-viewport&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">        unitToConvert: </span><span style="color:#032F62;">&quot;px&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        viewportWidth: viewWidth,</span></span>
<span class="line"><span style="color:#24292E;">        unitPrecision: </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        propList: [</span><span style="color:#032F62;">&quot;*&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">        viewportUnit: </span><span style="color:#032F62;">&quot;vw&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        fontViewportUnit: </span><span style="color:#032F62;">&quot;vw&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        selectorBlackList: [],</span></span>
<span class="line"><span style="color:#24292E;">        minPixelValue: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        mediaQuery: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        exclude: [],</span></span>
<span class="line"><span style="color:#24292E;">        landscape: </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      },</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">  };</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><p>如果读取的<code>node_modules</code>中的文件是<code>vant</code>,那么就将设计稿变为 375px。如果读取的文件不是<code>vant</code>的文件,那么就将设计稿变为 750px。这样就可以避免<code>vant</code>组件在 750px 下出现样式缩小的问题了。</p><p>同理 这对于其他的移动端 UI 组件库同样有效果。我们只需要改动这行代码即可</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">const viewWidth = webpack.resourcePath.includes(path.join(&#39;node_modules&#39;, &#39;vant&#39;)) ? 375 : 750;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">const viewWidth = webpack.resourcePath.includes(path.join(&#39;node_modules&#39;, &#39;vant&#39;)) ? 375 : 750;</span></span></code></pre></div><p>至此，我们的 viewport 的适配就做好了，只需要按照设计稿的比例进行开发就可以了。</p>`,17),e=[l];function t(c,r,E,i,y,d){return a(),n("div",null,e)}const F=s(o,[["render",t]]);export{v as __pageData,F as default};
