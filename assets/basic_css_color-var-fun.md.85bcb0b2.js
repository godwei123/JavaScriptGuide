import{d as G,h as T,g as N,C as k,o as w,b as I,w as x,H as F,k as f,t as b,c as V,a as L,Q as j}from"./chunks/framework.00751356.js";const O="/javascript-guide/assets/1642248277904-d94d7f96-25f0-41a8-9bef-dd59c885b0d0.57469c05.png",z="/javascript-guide/assets/1642249237927-1a75eb9d-b70e-4ec6-a8a3-68ba04837a0c.8d4e9b88.png",U="/javascript-guide/assets/1642249257097-6467c98a-ff17-404c-b6fc-e268099f9bd6.80256706.png";function C(s){"@babel/helpers - typeof";return C=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(n){return typeof n}:function(n){return n&&typeof Symbol=="function"&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},C(s)}var $=/^\s+/,J=/\s+$/;function o(s,n){if(s=s||"",n=n||{},s instanceof o)return s;if(!(this instanceof o))return new o(s,n);var a=W(s);this._originalInput=s,this._r=a.r,this._g=a.g,this._b=a.b,this._a=a.a,this._roundA=Math.round(100*this._a)/100,this._format=n.format||a.format,this._gradientType=n.gradientType,this._r<1&&(this._r=Math.round(this._r)),this._g<1&&(this._g=Math.round(this._g)),this._b<1&&(this._b=Math.round(this._b)),this._ok=a.ok}o.prototype={isDark:function(){return this.getBrightness()<128},isLight:function(){return!this.isDark()},isValid:function(){return this._ok},getOriginalInput:function(){return this._originalInput},getFormat:function(){return this._format},getAlpha:function(){return this._a},getBrightness:function(){var n=this.toRgb();return(n.r*299+n.g*587+n.b*114)/1e3},getLuminance:function(){var n=this.toRgb(),a,e,l,p,t,r;return a=n.r/255,e=n.g/255,l=n.b/255,a<=.03928?p=a/12.92:p=Math.pow((a+.055)/1.055,2.4),e<=.03928?t=e/12.92:t=Math.pow((e+.055)/1.055,2.4),l<=.03928?r=l/12.92:r=Math.pow((l+.055)/1.055,2.4),.2126*p+.7152*t+.0722*r},setAlpha:function(n){return this._a=D(n),this._roundA=Math.round(100*this._a)/100,this},toHsv:function(){var n=q(this._r,this._g,this._b);return{h:n.h*360,s:n.s,v:n.v,a:this._a}},toHsvString:function(){var n=q(this._r,this._g,this._b),a=Math.round(n.h*360),e=Math.round(n.s*100),l=Math.round(n.v*100);return this._a==1?"hsv("+a+", "+e+"%, "+l+"%)":"hsva("+a+", "+e+"%, "+l+"%, "+this._roundA+")"},toHsl:function(){var n=S(this._r,this._g,this._b);return{h:n.h*360,s:n.s,l:n.l,a:this._a}},toHslString:function(){var n=S(this._r,this._g,this._b),a=Math.round(n.h*360),e=Math.round(n.s*100),l=Math.round(n.l*100);return this._a==1?"hsl("+a+", "+e+"%, "+l+"%)":"hsla("+a+", "+e+"%, "+l+"%, "+this._roundA+")"},toHex:function(n){return B(this._r,this._g,this._b,n)},toHexString:function(n){return"#"+this.toHex(n)},toHex8:function(n){return K(this._r,this._g,this._b,this._a,n)},toHex8String:function(n){return"#"+this.toHex8(n)},toRgb:function(){return{r:Math.round(this._r),g:Math.round(this._g),b:Math.round(this._b),a:this._a}},toRgbString:function(){return this._a==1?"rgb("+Math.round(this._r)+", "+Math.round(this._g)+", "+Math.round(this._b)+")":"rgba("+Math.round(this._r)+", "+Math.round(this._g)+", "+Math.round(this._b)+", "+this._roundA+")"},toPercentageRgb:function(){return{r:Math.round(c(this._r,255)*100)+"%",g:Math.round(c(this._g,255)*100)+"%",b:Math.round(c(this._b,255)*100)+"%",a:this._a}},toPercentageRgbString:function(){return this._a==1?"rgb("+Math.round(c(this._r,255)*100)+"%, "+Math.round(c(this._g,255)*100)+"%, "+Math.round(c(this._b,255)*100)+"%)":"rgba("+Math.round(c(this._r,255)*100)+"%, "+Math.round(c(this._g,255)*100)+"%, "+Math.round(c(this._b,255)*100)+"%, "+this._roundA+")"},toName:function(){return this._a===0?"transparent":this._a<1?!1:is[B(this._r,this._g,this._b,!0)]||!1},toFilter:function(n){var a="#"+M(this._r,this._g,this._b,this._a),e=a,l=this._gradientType?"GradientType = 1, ":"";if(n){var p=o(n);e="#"+M(p._r,p._g,p._b,p._a)}return"progid:DXImageTransform.Microsoft.gradient("+l+"startColorstr="+a+",endColorstr="+e+")"},toString:function(n){var a=!!n;n=n||this._format;var e=!1,l=this._a<1&&this._a>=0,p=!a&&l&&(n==="hex"||n==="hex6"||n==="hex3"||n==="hex4"||n==="hex8"||n==="name");return p?n==="name"&&this._a===0?this.toName():this.toRgbString():(n==="rgb"&&(e=this.toRgbString()),n==="prgb"&&(e=this.toPercentageRgbString()),(n==="hex"||n==="hex6")&&(e=this.toHexString()),n==="hex3"&&(e=this.toHexString(!0)),n==="hex4"&&(e=this.toHex8String(!0)),n==="hex8"&&(e=this.toHex8String()),n==="name"&&(e=this.toName()),n==="hsl"&&(e=this.toHslString()),n==="hsv"&&(e=this.toHsvString()),e||this.toHexString())},clone:function(){return o(this.toString())},_applyModification:function(n,a){var e=n.apply(null,[this].concat([].slice.call(a)));return this._r=e._r,this._g=e._g,this._b=e._b,this.setAlpha(e._a),this},lighten:function(){return this._applyModification(ns,arguments)},brighten:function(){return this._applyModification(es,arguments)},darken:function(){return this._applyModification(ls,arguments)},desaturate:function(){return this._applyModification(Y,arguments)},saturate:function(){return this._applyModification(ss,arguments)},greyscale:function(){return this._applyModification(as,arguments)},spin:function(){return this._applyModification(ps,arguments)},_applyCombination:function(n,a){return n.apply(null,[this].concat([].slice.call(a)))},analogous:function(){return this._applyCombination(rs,arguments)},complement:function(){return this._applyCombination(os,arguments)},monochromatic:function(){return this._applyCombination(cs,arguments)},splitcomplement:function(){return this._applyCombination(ts,arguments)},triad:function(){return this._applyCombination(R,[3])},tetrad:function(){return this._applyCombination(R,[4])}};o.fromRatio=function(s,n){if(C(s)=="object"){var a={};for(var e in s)s.hasOwnProperty(e)&&(e==="a"?a[e]=s[e]:a[e]=m(s[e]));s=a}return o(s,n)};function W(s){var n={r:0,g:0,b:0},a=1,e=null,l=null,p=null,t=!1,r=!1;return typeof s=="string"&&(s=Es(s)),C(s)=="object"&&(g(s.r)&&g(s.g)&&g(s.b)?(n=Q(s.r,s.g,s.b),t=!0,r=String(s.r).substr(-1)==="%"?"prgb":"rgb"):g(s.h)&&g(s.s)&&g(s.v)?(e=m(s.s),l=m(s.v),n=Z(s.h,e,l),t=!0,r="hsv"):g(s.h)&&g(s.s)&&g(s.l)&&(e=m(s.s),p=m(s.l),n=X(s.h,e,p),t=!0,r="hsl"),s.hasOwnProperty("a")&&(a=s.a)),a=D(a),{ok:t,format:s.format||r,r:Math.min(255,Math.max(n.r,0)),g:Math.min(255,Math.max(n.g,0)),b:Math.min(255,Math.max(n.b,0)),a}}function Q(s,n,a){return{r:c(s,255)*255,g:c(n,255)*255,b:c(a,255)*255}}function S(s,n,a){s=c(s,255),n=c(n,255),a=c(a,255);var e=Math.max(s,n,a),l=Math.min(s,n,a),p,t,r=(e+l)/2;if(e==l)p=t=0;else{var i=e-l;switch(t=r>.5?i/(2-e-l):i/(e+l),e){case s:p=(n-a)/i+(n<a?6:0);break;case n:p=(a-s)/i+2;break;case a:p=(s-n)/i+4;break}p/=6}return{h:p,s:t,l:r}}function X(s,n,a){var e,l,p;s=c(s,360),n=c(n,100),a=c(a,100);function t(y,v,u){return u<0&&(u+=1),u>1&&(u-=1),u<1/6?y+(v-y)*6*u:u<1/2?v:u<2/3?y+(v-y)*(2/3-u)*6:y}if(n===0)e=l=p=a;else{var r=a<.5?a*(1+n):a+n-a*n,i=2*a-r;e=t(i,r,s+1/3),l=t(i,r,s),p=t(i,r,s-1/3)}return{r:e*255,g:l*255,b:p*255}}function q(s,n,a){s=c(s,255),n=c(n,255),a=c(a,255);var e=Math.max(s,n,a),l=Math.min(s,n,a),p,t,r=e,i=e-l;if(t=e===0?0:i/e,e==l)p=0;else{switch(e){case s:p=(n-a)/i+(n<a?6:0);break;case n:p=(a-s)/i+2;break;case a:p=(s-n)/i+4;break}p/=6}return{h:p,s:t,v:r}}function Z(s,n,a){s=c(s,360)*6,n=c(n,100),a=c(a,100);var e=Math.floor(s),l=s-e,p=a*(1-n),t=a*(1-l*n),r=a*(1-(1-l)*n),i=e%6,y=[a,t,p,p,r,a][i],v=[r,a,a,t,p,p][i],u=[p,p,r,a,a,t][i];return{r:y*255,g:v*255,b:u*255}}function B(s,n,a,e){var l=[d(Math.round(s).toString(16)),d(Math.round(n).toString(16)),d(Math.round(a).toString(16))];return e&&l[0].charAt(0)==l[0].charAt(1)&&l[1].charAt(0)==l[1].charAt(1)&&l[2].charAt(0)==l[2].charAt(1)?l[0].charAt(0)+l[1].charAt(0)+l[2].charAt(0):l.join("")}function K(s,n,a,e,l){var p=[d(Math.round(s).toString(16)),d(Math.round(n).toString(16)),d(Math.round(a).toString(16)),d(P(e))];return l&&p[0].charAt(0)==p[0].charAt(1)&&p[1].charAt(0)==p[1].charAt(1)&&p[2].charAt(0)==p[2].charAt(1)&&p[3].charAt(0)==p[3].charAt(1)?p[0].charAt(0)+p[1].charAt(0)+p[2].charAt(0)+p[3].charAt(0):p.join("")}function M(s,n,a,e){var l=[d(P(e)),d(Math.round(s).toString(16)),d(Math.round(n).toString(16)),d(Math.round(a).toString(16))];return l.join("")}o.equals=function(s,n){return!s||!n?!1:o(s).toRgbString()==o(n).toRgbString()};o.random=function(){return o.fromRatio({r:Math.random(),g:Math.random(),b:Math.random()})};function Y(s,n){n=n===0?0:n||10;var a=o(s).toHsl();return a.s-=n/100,a.s=_(a.s),o(a)}function ss(s,n){n=n===0?0:n||10;var a=o(s).toHsl();return a.s+=n/100,a.s=_(a.s),o(a)}function as(s){return o(s).desaturate(100)}function ns(s,n){n=n===0?0:n||10;var a=o(s).toHsl();return a.l+=n/100,a.l=_(a.l),o(a)}function es(s,n){n=n===0?0:n||10;var a=o(s).toRgb();return a.r=Math.max(0,Math.min(255,a.r-Math.round(255*-(n/100)))),a.g=Math.max(0,Math.min(255,a.g-Math.round(255*-(n/100)))),a.b=Math.max(0,Math.min(255,a.b-Math.round(255*-(n/100)))),o(a)}function ls(s,n){n=n===0?0:n||10;var a=o(s).toHsl();return a.l-=n/100,a.l=_(a.l),o(a)}function ps(s,n){var a=o(s).toHsl(),e=(a.h+n)%360;return a.h=e<0?360+e:e,o(a)}function os(s){var n=o(s).toHsl();return n.h=(n.h+180)%360,o(n)}function R(s,n){if(isNaN(n)||n<=0)throw new Error("Argument to polyad must be a positive number");for(var a=o(s).toHsl(),e=[o(s)],l=360/n,p=1;p<n;p++)e.push(o({h:(a.h+p*l)%360,s:a.s,l:a.l}));return e}function ts(s){var n=o(s).toHsl(),a=n.h;return[o(s),o({h:(a+72)%360,s:n.s,l:n.l}),o({h:(a+216)%360,s:n.s,l:n.l})]}function rs(s,n,a){n=n||6,a=a||30;var e=o(s).toHsl(),l=360/a,p=[o(s)];for(e.h=(e.h-(l*n>>1)+720)%360;--n;)e.h=(e.h+l)%360,p.push(o(e));return p}function cs(s,n){n=n||6;for(var a=o(s).toHsv(),e=a.h,l=a.s,p=a.v,t=[],r=1/n;n--;)t.push(o({h:e,s:l,v:p})),p=(p+r)%1;return t}o.mix=function(s,n,a){a=a===0?0:a||50;var e=o(s).toRgb(),l=o(n).toRgb(),p=a/100,t={r:(l.r-e.r)*p+e.r,g:(l.g-e.g)*p+e.g,b:(l.b-e.b)*p+e.b,a:(l.a-e.a)*p+e.a};return o(t)};o.readability=function(s,n){var a=o(s),e=o(n);return(Math.max(a.getLuminance(),e.getLuminance())+.05)/(Math.min(a.getLuminance(),e.getLuminance())+.05)};o.isReadable=function(s,n,a){var e=o.readability(s,n),l,p;switch(p=!1,l=ds(a),l.level+l.size){case"AAsmall":case"AAAlarge":p=e>=4.5;break;case"AAlarge":p=e>=3;break;case"AAAsmall":p=e>=7;break}return p};o.mostReadable=function(s,n,a){var e=null,l=0,p,t,r,i;a=a||{},t=a.includeFallbackColors,r=a.level,i=a.size;for(var y=0;y<n.length;y++)p=o.readability(s,n[y]),p>l&&(l=p,e=o(n[y]));return o.isReadable(s,e,{level:r,size:i})||!t?e:(a.includeFallbackColors=!1,o.mostReadable(s,["#fff","#000"],a))};var A=o.names={aliceblue:"f0f8ff",antiquewhite:"faebd7",aqua:"0ff",aquamarine:"7fffd4",azure:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"000",blanchedalmond:"ffebcd",blue:"00f",blueviolet:"8a2be2",brown:"a52a2a",burlywood:"deb887",burntsienna:"ea7e5d",cadetblue:"5f9ea0",chartreuse:"7fff00",chocolate:"d2691e",coral:"ff7f50",cornflowerblue:"6495ed",cornsilk:"fff8dc",crimson:"dc143c",cyan:"0ff",darkblue:"00008b",darkcyan:"008b8b",darkgoldenrod:"b8860b",darkgray:"a9a9a9",darkgreen:"006400",darkgrey:"a9a9a9",darkkhaki:"bdb76b",darkmagenta:"8b008b",darkolivegreen:"556b2f",darkorange:"ff8c00",darkorchid:"9932cc",darkred:"8b0000",darksalmon:"e9967a",darkseagreen:"8fbc8f",darkslateblue:"483d8b",darkslategray:"2f4f4f",darkslategrey:"2f4f4f",darkturquoise:"00ced1",darkviolet:"9400d3",deeppink:"ff1493",deepskyblue:"00bfff",dimgray:"696969",dimgrey:"696969",dodgerblue:"1e90ff",firebrick:"b22222",floralwhite:"fffaf0",forestgreen:"228b22",fuchsia:"f0f",gainsboro:"dcdcdc",ghostwhite:"f8f8ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",green:"008000",greenyellow:"adff2f",grey:"808080",honeydew:"f0fff0",hotpink:"ff69b4",indianred:"cd5c5c",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lavender:"e6e6fa",lavenderblush:"fff0f5",lawngreen:"7cfc00",lemonchiffon:"fffacd",lightblue:"add8e6",lightcoral:"f08080",lightcyan:"e0ffff",lightgoldenrodyellow:"fafad2",lightgray:"d3d3d3",lightgreen:"90ee90",lightgrey:"d3d3d3",lightpink:"ffb6c1",lightsalmon:"ffa07a",lightseagreen:"20b2aa",lightskyblue:"87cefa",lightslategray:"789",lightslategrey:"789",lightsteelblue:"b0c4de",lightyellow:"ffffe0",lime:"0f0",limegreen:"32cd32",linen:"faf0e6",magenta:"f0f",maroon:"800000",mediumaquamarine:"66cdaa",mediumblue:"0000cd",mediumorchid:"ba55d3",mediumpurple:"9370db",mediumseagreen:"3cb371",mediumslateblue:"7b68ee",mediumspringgreen:"00fa9a",mediumturquoise:"48d1cc",mediumvioletred:"c71585",midnightblue:"191970",mintcream:"f5fffa",mistyrose:"ffe4e1",moccasin:"ffe4b5",navajowhite:"ffdead",navy:"000080",oldlace:"fdf5e6",olive:"808000",olivedrab:"6b8e23",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",palegoldenrod:"eee8aa",palegreen:"98fb98",paleturquoise:"afeeee",palevioletred:"db7093",papayawhip:"ffefd5",peachpuff:"ffdab9",peru:"cd853f",pink:"ffc0cb",plum:"dda0dd",powderblue:"b0e0e6",purple:"800080",rebeccapurple:"663399",red:"f00",rosybrown:"bc8f8f",royalblue:"4169e1",saddlebrown:"8b4513",salmon:"fa8072",sandybrown:"f4a460",seagreen:"2e8b57",seashell:"fff5ee",sienna:"a0522d",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",slategrey:"708090",snow:"fffafa",springgreen:"00ff7f",steelblue:"4682b4",tan:"d2b48c",teal:"008080",thistle:"d8bfd8",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",wheat:"f5deb3",white:"fff",whitesmoke:"f5f5f5",yellow:"ff0",yellowgreen:"9acd32"},is=o.hexNames=ys(A);function ys(s){var n={};for(var a in s)s.hasOwnProperty(a)&&(n[s[a]]=a);return n}function D(s){return s=parseFloat(s),(isNaN(s)||s<0||s>1)&&(s=1),s}function c(s,n){hs(s)&&(s="100%");var a=us(s);return s=Math.min(n,Math.max(0,parseFloat(s))),a&&(s=parseInt(s*n,10)/100),Math.abs(s-n)<1e-6?1:s%n/parseFloat(n)}function _(s){return Math.min(1,Math.max(0,s))}function h(s){return parseInt(s,16)}function hs(s){return typeof s=="string"&&s.indexOf(".")!=-1&&parseFloat(s)===1}function us(s){return typeof s=="string"&&s.indexOf("%")!=-1}function d(s){return s.length==1?"0"+s:""+s}function m(s){return s<=1&&(s=s*100+"%"),s}function P(s){return Math.round(parseFloat(s)*255).toString(16)}function H(s){return h(s)/255}var E=function(){var s="[-\\+]?\\d+%?",n="[-\\+]?\\d*\\.\\d+%?",a="(?:"+n+")|(?:"+s+")",e="[\\s|\\(]+("+a+")[,|\\s]+("+a+")[,|\\s]+("+a+")\\s*\\)?",l="[\\s|\\(]+("+a+")[,|\\s]+("+a+")[,|\\s]+("+a+")[,|\\s]+("+a+")\\s*\\)?";return{CSS_UNIT:new RegExp(a),rgb:new RegExp("rgb"+e),rgba:new RegExp("rgba"+l),hsl:new RegExp("hsl"+e),hsla:new RegExp("hsla"+l),hsv:new RegExp("hsv"+e),hsva:new RegExp("hsva"+l),hex3:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex6:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,hex4:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex8:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/}}();function g(s){return!!E.CSS_UNIT.exec(s)}function Es(s){s=s.replace($,"").replace(J,"").toLowerCase();var n=!1;if(A[s])s=A[s],n=!0;else if(s=="transparent")return{r:0,g:0,b:0,a:0,format:"name"};var a;return(a=E.rgb.exec(s))?{r:a[1],g:a[2],b:a[3]}:(a=E.rgba.exec(s))?{r:a[1],g:a[2],b:a[3],a:a[4]}:(a=E.hsl.exec(s))?{h:a[1],s:a[2],l:a[3]}:(a=E.hsla.exec(s))?{h:a[1],s:a[2],l:a[3],a:a[4]}:(a=E.hsv.exec(s))?{h:a[1],s:a[2],v:a[3]}:(a=E.hsva.exec(s))?{h:a[1],s:a[2],v:a[3],a:a[4]}:(a=E.hex8.exec(s))?{r:h(a[1]),g:h(a[2]),b:h(a[3]),a:H(a[4]),format:n?"name":"hex8"}:(a=E.hex6.exec(s))?{r:h(a[1]),g:h(a[2]),b:h(a[3]),format:n?"name":"hex"}:(a=E.hex4.exec(s))?{r:h(a[1]+""+a[1]),g:h(a[2]+""+a[2]),b:h(a[3]+""+a[3]),a:H(a[4]+""+a[4]),format:n?"name":"hex8"}:(a=E.hex3.exec(s))?{r:h(a[1]+""+a[1]),g:h(a[2]+""+a[2]),b:h(a[3]+""+a[3]),format:n?"name":"hex"}:!1}function ds(s){var n,a;return s=s||{level:"AA",size:"small"},n=(s.level||"AA").toUpperCase(),a=(s.size||"small").toLowerCase(),n!=="AA"&&n!=="AAA"&&(n="AA"),a!=="small"&&a!=="large"&&(a="small"),{level:n,size:a}}const gs=G({__name:"color-visual",setup(s){const n=T("#ff0000");function a(l){return{hex:l.toHexString(),hex8:l.toHex8String(),rgb:l.toRgbString(),hsl:l.toHslString(),hsv:l.toHsvString(),name:l.toName()||"none",format:l.getFormat(),lighten:l.lighten(20).toHexString(),darken:l.darken(20).toHexString(),saturate:l.saturate(20).toHexString(),desaturate:l.desaturate(20).toHexString(),greyscale:l.greyscale().toHexString(),brighten:l.brighten(20).toHexString(),triad:l.triad().map(p=>p.toHexString()),tetrad:l.tetrad().map(p=>p.toHexString()),monochromatic:l.monochromatic().map(p=>p.toHexString()),analogous:l.analogous().map(p=>p.toHexString()),splitcomplement:l.splitcomplement().map(p=>p.toHexString())}}const e=N(()=>a(o(n.value)));return(l,p)=>{const t=k("n-color-picker"),r=k("n-gi"),i=k("n-grid");return w(),I(i,{"x-gap":"24",cols:3},{default:x(()=>[F(r,null,{default:x(()=>[F(t,{value:n.value,"onUpdate:value":p[0]||(p[0]=y=>n.value=y)},null,8,["value"])]),_:1}),F(r,{span:2},{default:x(()=>[f("div",null,"name: "+b(e.value.name),1),f("div",null,"hex: "+b(e.value.hex),1),f("div",null,"hex8: "+b(e.value.hex8),1),f("div",null,"rgb: "+b(e.value.rgb),1),f("div",null,"hsl: "+b(e.value.hsl),1),f("div",null,"hsv: "+b(e.value.hsv),1)]),_:1})]),_:1})}}}),fs=f("h1",{id:"css-color",tabindex:"-1"},[L("CSS Color "),f("a",{class:"header-anchor",href:"#css-color","aria-label":'Permalink to "CSS Color"'},"​")],-1),bs=j(`<h2 id="常见颜色格式" tabindex="-1">常见颜色格式 <a class="header-anchor" href="#常见颜色格式" aria-label="Permalink to &quot;常见颜色格式&quot;">​</a></h2><blockquote><p>设置元素的文本或装饰的颜色。 CSS 基本数据类型 <code>&lt;color&gt;</code></p></blockquote><h3 id="hex" tabindex="-1"><code>Hex</code> <a class="header-anchor" href="#hex" aria-label="Permalink to &quot;\`Hex\`&quot;">​</a></h3><blockquote><p>以<code>“#”</code>加十六进制</p></blockquote><h3 id="十六进制符号-rrggbb-aa" tabindex="-1">十六进制符号：<code>#RRGGBB[AA]</code> <a class="header-anchor" href="#十六进制符号-rrggbb-aa" aria-label="Permalink to &quot;十六进制符号：\`#RRGGBB[AA]\`&quot;">​</a></h3><p>R（红）、G（绿）、B （蓝）和 A （alpha）是十六进制字符（0–9、A–F）。A 是可选的。比如，#ff0000 等价于#ff0000ff。</p><h3 id="十六进制符号-rgb-a" tabindex="-1">十六进制符号：<code>#RGB[A]</code> <a class="header-anchor" href="#十六进制符号-rgb-a" aria-label="Permalink to &quot;十六进制符号：\`#RGB[A]\`&quot;">​</a></h3><p>R（红）、G（绿）、B （蓝）和 A （alpha）是十六进制字符（0–9、A–F）。A 是可选的。三位数符号（#RGB）是六位数形式（#RRGGBB）的减缩版。比如，#f09 和#ff0099 表示同一颜色。类似地，四位数符号（#RGBA）是八位数形式（#RRGGBBAA）的减缩版。比如，#0f38 和#00ff3388 表示相同颜色。</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">/* 十六进制语法 */</span></span>
<span class="line"><span style="color:#e1e4e8;">#f09</span></span>
<span class="line"><span style="color:#e1e4e8;">#F09</span></span>
<span class="line"><span style="color:#e1e4e8;">#ff0099</span></span>
<span class="line"><span style="color:#e1e4e8;">#FF0099</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">/* 带有 alpha 值的十六进制语法 */</span></span>
<span class="line"><span style="color:#e1e4e8;">#f09f</span></span>
<span class="line"><span style="color:#e1e4e8;">#F09F</span></span>
<span class="line"><span style="color:#e1e4e8;">#ff0099ff</span></span>
<span class="line"><span style="color:#e1e4e8;">#FF0099FF</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">/* 十六进制语法 */</span></span>
<span class="line"><span style="color:#24292e;">#f09</span></span>
<span class="line"><span style="color:#24292e;">#F09</span></span>
<span class="line"><span style="color:#24292e;">#ff0099</span></span>
<span class="line"><span style="color:#24292e;">#FF0099</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">/* 带有 alpha 值的十六进制语法 */</span></span>
<span class="line"><span style="color:#24292e;">#f09f</span></span>
<span class="line"><span style="color:#24292e;">#F09F</span></span>
<span class="line"><span style="color:#24292e;">#ff0099ff</span></span>
<span class="line"><span style="color:#24292e;">#FF0099FF</span></span></code></pre></div><h3 id="rgb" tabindex="-1"><code>RGB</code> <a class="header-anchor" href="#rgb" aria-label="Permalink to &quot;\`RGB\`&quot;">​</a></h3><p>颜色可以使用红 - 绿 - 蓝（red-green-blue (RGB)）</p><blockquote><p><code>rgb()</code> 和 <code>rgba()</code> 函数表达式的形式 每种颜色使用 0 到 255 之间的数字指定。 最常见的 RGB 值黑色：rgb(0,0,0) 和白色：rgb(255,255,255)。</p></blockquote><h4 id="rgb-a-r-g-b-a" tabindex="-1"><code>rgb[a](R, G, B[, A])</code> <a class="header-anchor" href="#rgb-a-r-g-b-a" aria-label="Permalink to &quot;\`rgb[a](R, G, B[, A])\`&quot;">​</a></h4><p>R（红）、G（绿）、B （蓝）可以是<code>&lt;number&gt;</code>（数字），或者<code>&lt;percentage&gt;</code>（百分比），255 相当于 100%。A（alpha）可以是 0 到 1 之间的数字，或者百分比，数字 1 相当于 100%（完全不透明）。</p><h4 id="rgb-a-r-g-b-a-1" tabindex="-1"><code>rgb[a](R G B[ / A])</code> <a class="header-anchor" href="#rgb-a-r-g-b-a-1" aria-label="Permalink to &quot;\`rgb[a](R G B[ / A])\`&quot;">​</a></h4><p>R（红）、G（绿）、B （蓝）可以是<code>&lt;number&gt;</code>（数字），或者<code>&lt;percentage&gt;</code>（百分比），255 相当于 100%。A（alpha）可以是 0 到 1 之间的数字，或者百分比，数字 1 相当于 100%（完全不透明）。</p><p><strong>注意：</strong> 不要混用数字和百分比</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">/* 函数语法 */</span></span>
<span class="line"><span style="color:#e1e4e8;">rgb(255,0,153)</span></span>
<span class="line"><span style="color:#e1e4e8;">rgb(255, 0, 153)</span></span>
<span class="line"><span style="color:#e1e4e8;">rgb(255, 0, 153.0)</span></span>
<span class="line"><span style="color:#e1e4e8;">rgb(100%,0%,60%)</span></span>
<span class="line"><span style="color:#e1e4e8;">rgb(100%, 0%, 60%)</span></span>
<span class="line"><span style="color:#e1e4e8;">rgb(100%, 0, 60%) /* 错误：不要混用数字和百分比 */</span></span>
<span class="line"><span style="color:#e1e4e8;">rgb(255 0 153)</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">/* 带有 alpha 值的函数语法 */</span></span>
<span class="line"><span style="color:#e1e4e8;">rgb(255, 0, 153, 1)</span></span>
<span class="line"><span style="color:#e1e4e8;">rgb(255, 0, 153, 100%)</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">/* 空格语法 */</span></span>
<span class="line"><span style="color:#e1e4e8;">rgb(255 0 153 / 1)</span></span>
<span class="line"><span style="color:#e1e4e8;">rgb(255 0 153 / 100%)</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">/* 带有浮点值的函数语法 */</span></span>
<span class="line"><span style="color:#e1e4e8;">rgb(255, 0, 153.6, 1)</span></span>
<span class="line"><span style="color:#e1e4e8;">rgb(1e2, .5e1, .5e0, +.25e2%)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">/* 函数语法 */</span></span>
<span class="line"><span style="color:#24292e;">rgb(255,0,153)</span></span>
<span class="line"><span style="color:#24292e;">rgb(255, 0, 153)</span></span>
<span class="line"><span style="color:#24292e;">rgb(255, 0, 153.0)</span></span>
<span class="line"><span style="color:#24292e;">rgb(100%,0%,60%)</span></span>
<span class="line"><span style="color:#24292e;">rgb(100%, 0%, 60%)</span></span>
<span class="line"><span style="color:#24292e;">rgb(100%, 0, 60%) /* 错误：不要混用数字和百分比 */</span></span>
<span class="line"><span style="color:#24292e;">rgb(255 0 153)</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">/* 带有 alpha 值的函数语法 */</span></span>
<span class="line"><span style="color:#24292e;">rgb(255, 0, 153, 1)</span></span>
<span class="line"><span style="color:#24292e;">rgb(255, 0, 153, 100%)</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">/* 空格语法 */</span></span>
<span class="line"><span style="color:#24292e;">rgb(255 0 153 / 1)</span></span>
<span class="line"><span style="color:#24292e;">rgb(255 0 153 / 100%)</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">/* 带有浮点值的函数语法 */</span></span>
<span class="line"><span style="color:#24292e;">rgb(255, 0, 153.6, 1)</span></span>
<span class="line"><span style="color:#24292e;">rgb(1e2, .5e1, .5e0, +.25e2%)</span></span></code></pre></div><h3 id="named-color" tabindex="-1"><code>named-color</code> <a class="header-anchor" href="#named-color" aria-label="Permalink to &quot;\`named-color\`&quot;">​</a></h3><blockquote><p>关键字，如 blue，transparent</p></blockquote><p>颜色关键字（color keywords）是不区分大小写的标识符，它表示一个具体的颜色，例如 red、blue、brown 或者 lightseagreen 。尽管名称或多或少描述了分别的颜色，但必定是人工的，其后没有严格的标准。</p><p>所有预定义颜色名称：<a href="https://www.w3schools.com/colors/colors_names.asp" target="_blank" rel="noreferrer">https://www.w3schools.com/colors/colors_names.asp</a></p><h4 id="transparent" tabindex="-1">transparent <a class="header-anchor" href="#transparent" aria-label="Permalink to &quot;transparent&quot;">​</a></h4><p>transparent 关键字表示一个完全透明的颜色，即该颜色看上去将是背景色。从技术上说，它是带有阿尔法通道为最小值的黑色，是 rgba(0,0,0,0) 的简写。</p><h4 id="currentcolor-关键字" tabindex="-1">currentColor 关键字 <a class="header-anchor" href="#currentcolor-关键字" aria-label="Permalink to &quot;currentColor 关键字&quot;">​</a></h4><p>currentColor 表示当前的颜色。如果没有指定，就会从父容器继承的文本颜色。</p><p>currentColor 关键字代表原始的 color 属性的计算值。它允许让继承自属性或子元素的属性颜色属性以默认值不再继承。</p><p>它也能用于那些继承了元素的 color 属性计算值的属性，相当于在这些元素上使用 inherit 关键字，如果这些元素有该关键字的话。</p><p>该属性在 SVG 中使用时很方便，可以将指定的填充或描边颜色设置为 currentColor，以确保 SVG 颜色与其父级的文本颜色匹配。</p><h3 id="hsl" tabindex="-1"><code>HSL</code> <a class="header-anchor" href="#hsl" aria-label="Permalink to &quot;\`HSL\`&quot;">​</a></h3><p>颜色也可以使用 hsl() 函数符被定义为色相 - 饱和度 - 亮度（Hue-saturation-lightness）模式。HSL 相比 RGB 的优点是更加直观：你可以估算你想要的颜色，然后微调。它也更易于创建相称的颜色集合。（通过保持相同的色相并改变亮度/暗度和饱和度）。</p><blockquote><p>以 <code>hsl()</code> 和 <code>hsla()</code> 函数表达式的形式 参数形式同 RGB/RGBA</p></blockquote><h4 id="色相-hue" tabindex="-1">色相 Hue <a class="header-anchor" href="#色相-hue" aria-label="Permalink to &quot;色相 Hue&quot;">​</a></h4><p>色相描述了色轮上的值，从 0 到 360 度，从红色开始（0 和 360），参数还可以接角度单位 turn（圈）和无单位</p><p><img src="`+O+'" alt="Hue"></p><h4 id="饱和度-saturation" tabindex="-1">饱和度 Saturation <a class="header-anchor" href="#饱和度-saturation" aria-label="Permalink to &quot;饱和度 Saturation&quot;">​</a></h4><p>饱和度是所选色调的鲜艳程度，100% 表示完全饱和的亮色，0% 表示完全不饱和的灰色；</p><p><img src="'+z+'" alt="image.png"></p><h4 id="亮度-lightness" tabindex="-1">亮度 Lightness <a class="header-anchor" href="#亮度-lightness" aria-label="Permalink to &quot;亮度 Lightness&quot;">​</a></h4><p>颜色的亮度级别，较低的值会更暗，更接近黑色，较高的值会更亮，更接近白色。</p><p><img src="'+U+`" alt="image.png"></p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">/* 以下示例都表示同一颜色：a lavender */</span></span>
<span class="line"><span style="color:#e1e4e8;">hsl(270,60%,70%)</span></span>
<span class="line"><span style="color:#e1e4e8;">hsl(270, 60%, 70%)</span></span>
<span class="line"><span style="color:#e1e4e8;">hsl(270 60% 70%)</span></span>
<span class="line"><span style="color:#e1e4e8;">hsl(270deg, 60%, 70%)</span></span>
<span class="line"><span style="color:#e1e4e8;">hsl(4.71239rad, 60%, 70%)</span></span>
<span class="line"><span style="color:#e1e4e8;">hsl(.75turn, 60%, 70%)</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">/* 以下示例都表示同一颜色：a lavender that is 15% opaque. */</span></span>
<span class="line"><span style="color:#e1e4e8;">hsl(270, 60%, 50%, .15)</span></span>
<span class="line"><span style="color:#e1e4e8;">hsl(270, 60%, 50%, 15%)</span></span>
<span class="line"><span style="color:#e1e4e8;">hsl(270 60% 50% / .15)</span></span>
<span class="line"><span style="color:#e1e4e8;">hsl(270 60% 50% / 15%)</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">hsla(240, 100%, 50%, .05)     /*   5% opaque blue */</span></span>
<span class="line"><span style="color:#e1e4e8;">hsla(240, 100%, 50%, .4)      /*  40% opaque blue */</span></span>
<span class="line"><span style="color:#e1e4e8;">hsla(240, 100%, 50%, .7)      /*  70% opaque blue */</span></span>
<span class="line"><span style="color:#e1e4e8;">hsla(240, 100%, 50%, 1)       /* full opaque blue */</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">/* Whitespace syntax */</span></span>
<span class="line"><span style="color:#e1e4e8;">hsla(240 100% 50% / .05)      /*   5% opaque blue */</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">/* Percentage value for alpha */</span></span>
<span class="line"><span style="color:#e1e4e8;">hsla(240 100% 50% / 5%)       /*   5% opaque blue */</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">/* 以下示例都表示同一颜色：a lavender */</span></span>
<span class="line"><span style="color:#24292e;">hsl(270,60%,70%)</span></span>
<span class="line"><span style="color:#24292e;">hsl(270, 60%, 70%)</span></span>
<span class="line"><span style="color:#24292e;">hsl(270 60% 70%)</span></span>
<span class="line"><span style="color:#24292e;">hsl(270deg, 60%, 70%)</span></span>
<span class="line"><span style="color:#24292e;">hsl(4.71239rad, 60%, 70%)</span></span>
<span class="line"><span style="color:#24292e;">hsl(.75turn, 60%, 70%)</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">/* 以下示例都表示同一颜色：a lavender that is 15% opaque. */</span></span>
<span class="line"><span style="color:#24292e;">hsl(270, 60%, 50%, .15)</span></span>
<span class="line"><span style="color:#24292e;">hsl(270, 60%, 50%, 15%)</span></span>
<span class="line"><span style="color:#24292e;">hsl(270 60% 50% / .15)</span></span>
<span class="line"><span style="color:#24292e;">hsl(270 60% 50% / 15%)</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">hsla(240, 100%, 50%, .05)     /*   5% opaque blue */</span></span>
<span class="line"><span style="color:#24292e;">hsla(240, 100%, 50%, .4)      /*  40% opaque blue */</span></span>
<span class="line"><span style="color:#24292e;">hsla(240, 100%, 50%, .7)      /*  70% opaque blue */</span></span>
<span class="line"><span style="color:#24292e;">hsla(240, 100%, 50%, 1)       /* full opaque blue */</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">/* Whitespace syntax */</span></span>
<span class="line"><span style="color:#24292e;">hsla(240 100% 50% / .05)      /*   5% opaque blue */</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">/* Percentage value for alpha */</span></span>
<span class="line"><span style="color:#24292e;">hsla(240 100% 50% / 5%)       /*   5% opaque blue */</span></span></code></pre></div><h3 id="全局" tabindex="-1">全局 <a class="header-anchor" href="#全局" aria-label="Permalink to &quot;全局&quot;">​</a></h3><ul><li><code>color: inherit;</code></li><li><code>color: initial;</code></li><li><code>color: unset;</code></li></ul><h2 id="css-变量" tabindex="-1">CSS 变量 <a class="header-anchor" href="#css-变量" aria-label="Permalink to &quot;CSS 变量&quot;">​</a></h2><p>带有前缀<code>--</code>的属性名，比如<code>--example--name</code>，表示的是带有值的自定义属性，其可以通过 var 函数在全文档范围内复用的。</p><p>CSS 自定义属性是可以级联的：每一个自定义属性可以多次出现，并且变量的值将会借助级联算法和自定义属性值运算出来。</p><h3 id="基本使用" tabindex="-1">基本使用 <a class="header-anchor" href="#基本使用" aria-label="Permalink to &quot;基本使用&quot;">​</a></h3><p>声明一个自定义属性，属性名需要以两个减号（--）开始，属性值则可以是任何有效的 CSS 值。和其他属性一样，自定义属性也是写在规则集之内的。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">.element</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">--main-bg-color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">#ccc</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">:root</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">--main-bg-color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">#ccc</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">.element</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">--main-bg-color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#ccc</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">:root</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">--main-bg-color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#ccc</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><strong>备注：</strong></p><ul><li>自定义属性名是大小写敏感的，--my-color 和 --My-color 会被认为是两个不同的自定义属性。</li><li>CSS 变量不能是属性名</li><li>避免循环依赖</li></ul><h3 id="继承性" tabindex="-1">继承性 <a class="header-anchor" href="#继承性" aria-label="Permalink to &quot;继承性&quot;">​</a></h3><p>自定义属性会继承。这意味着如果在一个给定的元素上，没有为这个自定义属性设置值，在其父元素上的值会被使用。</p><p>局部作用域是优先于全局作用域的。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;one&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;two&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;three&quot;</span><span style="color:#E1E4E8;">&gt;&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;four&quot;</span><span style="color:#E1E4E8;">&gt;&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;one&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;two&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;three&quot;</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;four&quot;</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">.two</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">--test</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">10</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">.three</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">--test</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">2</span><span style="color:#F97583;">em</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">.two</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">--test</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">10</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">.three</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">--test</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">2</span><span style="color:#D73A49;">em</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>在这个情况下， var(--test) 的结果分别是：</p><ul><li>对于元素 class=&quot;two&quot; ：10px</li><li>对于元素 class=&quot;three&quot; ：2em</li><li>对于元素 class=&quot;four&quot; ：10px （继承自父属性）</li><li>对于元素 class=&quot;one&quot; ：非法值，会变成自定义属性的默认值</li></ul><p>注意，这些是自定义属性，并不是你在其他编程语言中遇到的实际的变量。这些值仅当需要的时候才会计算，而并不会按其他规则进行保存。比如，你不能为元素设置一个属性，然后让它从兄弟或旁支子孙规则上获取值。属性仅用于匹配当前选择器及其子孙，这和通常的 CSS 是一样的。</p><h3 id="var-函数" tabindex="-1">var 函数 <a class="header-anchor" href="#var-函数" aria-label="Permalink to &quot;var 函数&quot;">​</a></h3><p>用 var() 函数可以定义多个备用值(fallback value)，当给定值未定义时将会用备用值替换。这对于 Custom Elements 和 Shadow DOM 都很有用。</p><p>备注： 备用值并不是用于实现浏览器兼容性的。如果浏览器不支持 CSS 自定义属性，备用值也没什么用。它仅对支持 CSS 自定义属性的浏览器提供了一个备份机制，该机制仅当给定值未定义或是无效值的时候生效。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">.two</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">width</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">var</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">--test</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">red</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">background-color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">var</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">--my-var</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">var</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">--my-background</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">pink</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">.two</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">width</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">var</span><span style="color:#24292E;">(</span><span style="color:#E36209;">--test</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">red</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">background-color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">var</span><span style="color:#24292E;">(</span><span style="color:#E36209;">--my-var</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">var</span><span style="color:#24292E;">(</span><span style="color:#E36209;">--my-background</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">pink</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="有效性和值" tabindex="-1">有效性和值 <a class="header-anchor" href="#有效性和值" aria-label="Permalink to &quot;有效性和值&quot;">​</a></h3><p>传统的 CSS 概念里，有效性和属性是绑定的，这对自定义属性来说并不适用。当自定义属性值被解析，浏览器不知道它们什么时候会被使用，所以必须认为这些值都是有效的。</p><p>不幸的是，即便这些值是有效的，但当通过 var() 函数调用时，它在特定上下文环境下也可能不会奏效。属性和自定义变量会导致无效的 CSS 语句，这引入了一个新的概念：计算时有效性。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">:root</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">--text-color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">16</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#85E89D;">p</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">blue</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#85E89D;">p</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">var</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">--text-color</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">:root</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">--text-color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">16</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#22863A;">p</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">blue</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#22863A;">p</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">var</span><span style="color:#24292E;">(</span><span style="color:#E36209;">--text-color</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>毫不意外，浏览器将 --text-color 的值替换给了 var(--text-color)，但是 16px 并不是 color 的合法属性值。代换之后，该属性不会产生任何作用。浏览器会执行如下两个步骤：</p><p>检查属性 color 是否为继承属性。是，但是 <code>&lt;p&gt;</code> 没有任何父元素定义了 color 属性。转到下一步。 将该值设置为它的默认初始值，比如 black。</p><p><strong>备注：</strong> 当 CSS 属性 - 值对中存在语法错误，该行则会被忽略。然而如果自定义属性的值无效，它并不会被忽略，从而会导致该值被覆盖为默认值。</p><p>对于 CSS 变量的备用值，在替换的过程中，会有四种可能：</p><ul><li>浏览器不支持 CSS 变量，带有 var()的代码行将会被忽略，将使用浏览器的默认值；</li><li>浏览器支持变量，并且该变量设置为正确值，则直接使用该变量；</li><li>浏览器支持变量，并且变量未设置为任何值，则直接使用备用值；</li><li>浏览器支持变量，并且该变量设置为无效值，则使用浏览器的默认值。</li></ul><h3 id="javascript-操作-css-变量" tabindex="-1">JavaScript 操作 CSS 变量 <a class="header-anchor" href="#javascript-操作-css-变量" aria-label="Permalink to &quot;JavaScript 操作 CSS 变量&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 获取一个 Dom 节点上的 CSS 变量</span></span>
<span class="line"><span style="color:#6A737D;">// &lt;p style=&quot;--my-var: red&quot;&gt;&lt;/p&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">element.style.</span><span style="color:#B392F0;">getPropertyValue</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;--my-var&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 获取任意 Dom 节点上的 CSS 变量</span></span>
<span class="line"><span style="color:#6A737D;">// p { --my-var: red;}</span></span>
<span class="line"><span style="color:#B392F0;">getComputedStyle</span><span style="color:#E1E4E8;">(element).</span><span style="color:#B392F0;">getPropertyValue</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;--my-var&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 修改一个 Dom 节点上的 CSS 变量</span></span>
<span class="line"><span style="color:#E1E4E8;">element.style.</span><span style="color:#B392F0;">setProperty</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;--my-var&quot;</span><span style="color:#E1E4E8;">, jsVar </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 获取一个 Dom 节点上的 CSS 变量</span></span>
<span class="line"><span style="color:#6A737D;">// &lt;p style=&quot;--my-var: red&quot;&gt;&lt;/p&gt;</span></span>
<span class="line"><span style="color:#24292E;">element.style.</span><span style="color:#6F42C1;">getPropertyValue</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;--my-var&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 获取任意 Dom 节点上的 CSS 变量</span></span>
<span class="line"><span style="color:#6A737D;">// p { --my-var: red;}</span></span>
<span class="line"><span style="color:#6F42C1;">getComputedStyle</span><span style="color:#24292E;">(element).</span><span style="color:#6F42C1;">getPropertyValue</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;--my-var&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 修改一个 Dom 节点上的 CSS 变量</span></span>
<span class="line"><span style="color:#24292E;">element.style.</span><span style="color:#6F42C1;">setProperty</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;--my-var&quot;</span><span style="color:#24292E;">, jsVar </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">);</span></span></code></pre></div><h3 id="css-变量应用" tabindex="-1">CSS 变量应用 <a class="header-anchor" href="#css-变量应用" aria-label="Permalink to &quot;CSS 变量应用&quot;">​</a></h3><blockquote><p>封装一个按钮，通过传入不同的 type，显示不同的颜色。</p></blockquote><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;btn&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">data-type</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;primary&quot;</span><span style="color:#E1E4E8;">&gt;按钮一&lt;/</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;btn&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">data-type</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;danger&quot;</span><span style="color:#E1E4E8;">&gt;按钮二&lt;/</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;btn&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">data-type</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;success&quot;</span><span style="color:#E1E4E8;">&gt;按钮三&lt;/</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">button</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;btn&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">data-type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;primary&quot;</span><span style="color:#24292E;">&gt;按钮一&lt;/</span><span style="color:#22863A;">button</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">button</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;btn&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">data-type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;danger&quot;</span><span style="color:#24292E;">&gt;按钮二&lt;/</span><span style="color:#22863A;">button</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">button</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;btn&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">data-type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;success&quot;</span><span style="color:#24292E;">&gt;按钮三&lt;/</span><span style="color:#22863A;">button</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">:root</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">--btn-primary</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">#4e7bea</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">--btn-danger</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">#f31818</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">--btn-success</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">#43f848</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">.btn</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">padding</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">10</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">20</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">black</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#85E89D;">button</span><span style="color:#B392F0;">.btn.primary</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">background-color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">var</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">--btn-primary</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#85E89D;">button</span><span style="color:#B392F0;">.btn.danger</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">background-color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">var</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">--btn-danger</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#85E89D;">button</span><span style="color:#B392F0;">.btn.success</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">background-color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">var</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">--btn-success</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">:root</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">--btn-primary</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#4e7bea</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">--btn-danger</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#f31818</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">--btn-success</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#43f848</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">.btn</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">padding</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">10</span><span style="color:#D73A49;">px</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">20</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">black</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#22863A;">button</span><span style="color:#6F42C1;">.btn.primary</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">background-color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">var</span><span style="color:#24292E;">(</span><span style="color:#E36209;">--btn-primary</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#22863A;">button</span><span style="color:#6F42C1;">.btn.danger</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">background-color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">var</span><span style="color:#24292E;">(</span><span style="color:#E36209;">--btn-danger</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#22863A;">button</span><span style="color:#6F42C1;">.btn.success</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">background-color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">var</span><span style="color:#24292E;">(</span><span style="color:#E36209;">--btn-success</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">elements</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> document.</span><span style="color:#B392F0;">querySelectorAll</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;.btn&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> ele </span><span style="color:#F97583;">of</span><span style="color:#E1E4E8;"> elements) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> type </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ele.dataset.type;</span></span>
<span class="line"><span style="color:#E1E4E8;">  ele.classList.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(type);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">elements</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> document.</span><span style="color:#6F42C1;">querySelectorAll</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;.btn&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> ele </span><span style="color:#D73A49;">of</span><span style="color:#24292E;"> elements) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> type </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ele.dataset.type;</span></span>
<span class="line"><span style="color:#24292E;">  ele.classList.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(type);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="css-函数" tabindex="-1">CSS 函数 <a class="header-anchor" href="#css-函数" aria-label="Permalink to &quot;CSS 函数&quot;">​</a></h2><h3 id="calc" tabindex="-1">calc <a class="header-anchor" href="#calc" aria-label="Permalink to &quot;calc&quot;">​</a></h3><h3 id="min" tabindex="-1">min <a class="header-anchor" href="#min" aria-label="Permalink to &quot;min&quot;">​</a></h3><h3 id="max" tabindex="-1">max <a class="header-anchor" href="#max" aria-label="Permalink to &quot;max&quot;">​</a></h3><h3 id="clamp" tabindex="-1">clamp <a class="header-anchor" href="#clamp" aria-label="Permalink to &quot;clamp&quot;">​</a></h3>`,85),Fs=JSON.parse('{"title":"CSS Color","description":"","frontmatter":{},"headers":[],"relativePath":"basic/css/color-var-fun.md","filePath":"basic/css/color-var-fun.md"}'),vs={name:"basic/css/color-var-fun.md"},Cs=Object.assign(vs,{setup(s){return(n,a)=>(w(),V("div",null,[fs,F(gs),bs]))}});export{Fs as __pageData,Cs as default};
