import{_ as t,o as d,c as e,U as o}from"./chunks/framework.c99fcb40.js";const u=JSON.parse('{"title":"伪类和伪元素","description":"","frontmatter":{},"headers":[],"relativePath":"basic/css/pseudo-classes-element.md","filePath":"basic/css/pseudo-classes-element.md"}'),r={name:"basic/css/pseudo-classes-element.md"},c=o('<h1 id="伪类和伪元素" tabindex="-1">伪类和伪元素 <a class="header-anchor" href="#伪类和伪元素" aria-label="Permalink to &quot;伪类和伪元素&quot;">​</a></h1><h2 id="伪类" tabindex="-1">伪类 <a class="header-anchor" href="#伪类" aria-label="Permalink to &quot;伪类&quot;">​</a></h2><table><thead><tr><th>选择器</th><th>描述</th></tr></thead><tbody><tr><td><code>:active</code></td><td>在用户激活（例如点击）元素的时候匹配。</td></tr><tr><td><code>:any-link</code></td><td>匹配一个链接的<code>:link</code>和<code>:visited</code>状态。</td></tr><tr><td><code>:blank</code></td><td>匹配空输入值的<code>&lt;input&gt;</code>元素。</td></tr><tr><td><code>:checked</code></td><td>匹配处于选中状态的单选或者复选框。</td></tr><tr><td><code>:current</code></td><td>匹配正在展示的元素，或者其上级元素。</td></tr><tr><td><code>:default</code></td><td>匹配一组相似的元素中默认的一个或者更多的 UI 元素。</td></tr><tr><td><code>:dir</code></td><td>基于其方向性（HTML <code>dir</code>属性或者 CSS <code>direction</code>属性的值）匹配一个元素。</td></tr><tr><td><code>:disabled</code></td><td>匹配处于关闭状态的用户界面元素</td></tr><tr><td><code>:empty</code></td><td>匹配除了可能存在的空格外，没有子元素的元素。</td></tr><tr><td><code>:enabled</code></td><td>匹配处于开启状态的用户界面元素。</td></tr><tr><td><code>:first</code></td><td>匹配分页媒体的第一页。</td></tr><tr><td><code>:first-child</code></td><td>匹配兄弟元素中的第一个元素。</td></tr><tr><td><code>:first-of-type</code></td><td>匹配兄弟元素中第一个某种类型的元素。</td></tr><tr><td><code>:focus</code></td><td>当一个元素有焦点的时候匹配。</td></tr><tr><td><code>:focus-visible</code></td><td>当元素有焦点，且焦点对用户可见的时候匹配。</td></tr><tr><td><code>:focus-within</code></td><td>匹配有焦点的元素，以及子代元素有焦点的元素。</td></tr><tr><td><code>:future</code></td><td>匹配当前元素之后的元素。</td></tr><tr><td><code>:hover</code></td><td>当用户悬浮到一个元素之上的时候匹配。</td></tr><tr><td><code>:indeterminate</code></td><td>匹配未定态值的 UI 元素，通常为 复选框。</td></tr><tr><td><code>:in-range</code></td><td>用一个区间匹配元素，当值处于区间之内时匹配。</td></tr><tr><td><code>:invalid</code></td><td>匹配诸如<code>&lt;input&gt;</code>的位于不可用状态的元素。</td></tr><tr><td><code>:lang</code></td><td>基于语言（HTML lang 属性的值）匹配元素。</td></tr><tr><td><code>:last-child</code></td><td>匹配兄弟元素中最末的那个元素。</td></tr><tr><td><code>:last-of-type</code></td><td>匹配兄弟元素中最后一个某种类型的元素。</td></tr><tr><td><code>:left</code></td><td>在分页媒体中，匹配左手边的页。</td></tr><tr><td><code>:link</code></td><td>匹配未曾访问的链接。</td></tr><tr><td><code>:local-link</code></td><td>匹配指向和当前文档同一网站页面的链接。</td></tr><tr><td><code>:is()</code></td><td>匹配传入的选择器列表中的任何选择器。</td></tr><tr><td><code>:not</code></td><td>匹配作为值传入自身的选择器未匹配的物件。</td></tr><tr><td><code>:nth-child</code></td><td>匹配一列兄弟元素中的元素——兄弟元素按照<em>an+b</em>形式的式子进行匹配（比如 2n+1 匹配元素 1、3、5、7 等。即所有的奇数个）。</td></tr><tr><td><code>:nth-of-type</code></td><td>匹配某种类型的一列兄弟元素（比如，<code>&lt;p&gt;</code>元素）——兄弟元素按照<em>an+b</em>形式的式子进行匹配（比如 2n+1 匹配元素 1、3、5、7 等。即所有的奇数个）。</td></tr><tr><td><code>:nth-last-child</code></td><td>匹配一列兄弟元素，从后往前倒数。兄弟元素按照<em>an+b</em>形式的式子进行匹配（比如 2n+1 匹配按照顺序来的最后一个元素，然后往前两个，再往前两个，诸如此类。从后往前数的所有奇数个）。</td></tr><tr><td><code>:nth-last-of-type</code></td><td>匹配某种类型的一列兄弟元素（比如，<code>&lt;p&gt;</code>元素），从后往前倒数。兄弟元素按照<em>an+b</em>形式的式子进行匹配（比如 2n+1 匹配按照顺序来的最后一个元素，然后往前两个，再往前两个，诸如此类。从后往前数的所有奇数个）。</td></tr><tr><td><code>:only-child</code></td><td>匹配没有兄弟元素的元素。</td></tr><tr><td><code>:only-of-type</code></td><td>匹配兄弟元素中某类型仅有的元素。</td></tr><tr><td><code>:optional</code></td><td>匹配不是必填的 form 元素。</td></tr><tr><td><code>:out-of-range</code></td><td>按区间匹配元素，当值不在区间内的的时候匹配。</td></tr><tr><td><code>:past</code></td><td>匹配当前元素之前的元素。</td></tr><tr><td><code>:placeholder-shown</code></td><td>匹配显示占位文字的 input 元素。</td></tr><tr><td><code>:playing</code></td><td>匹配代表音频、视频或者相似的能“播放”或者“暂停”的资源的，且正在“播放”的元素。</td></tr><tr><td><code>:paused</code></td><td>匹配代表音频、视频或者相似的能“播放”或者“暂停”的资源的，且正在“暂停”的元素。</td></tr><tr><td><code>:read-only</code></td><td>匹配用户不可更改的元素。</td></tr><tr><td><code>:read-write</code></td><td>匹配用户可更改的元素。</td></tr><tr><td><code>:required</code></td><td>匹配必填的 form 元素。</td></tr><tr><td><code>:right</code></td><td>在分页媒体中，匹配右手边的页。</td></tr><tr><td><code>:root</code></td><td>匹配文档的根元素。</td></tr><tr><td><code>:scope</code></td><td>匹配任何为参考点元素的的元素。</td></tr><tr><td><code>:valid</code></td><td>匹配诸如<code>&lt;input&gt;</code>元素的处于可用状态的元素。</td></tr><tr><td><code>:target</code></td><td>匹配当前 URL 目标的元素（例如如果它有一个匹配当前<a href="https://en.wikipedia.org/wiki/Fragment_identifier" target="_blank" rel="noreferrer">URL 分段</a>的元素）。</td></tr><tr><td><code>:visited</code></td><td>匹配已访问链接。</td></tr></tbody></table><h2 id="伪元素" tabindex="-1">伪元素 <a class="header-anchor" href="#伪元素" aria-label="Permalink to &quot;伪元素&quot;">​</a></h2><table><thead><tr><th>选择器</th><th>描述</th></tr></thead><tbody><tr><td><code>::after</code></td><td>匹配出现在原有元素的实际内容之后的一个可样式化元素。</td></tr><tr><td><code>::before</code></td><td>匹配出现在原有元素的实际内容之前的一个可样式化元素。</td></tr><tr><td><code>::first-letter</code></td><td>匹配元素的第一个字母。</td></tr><tr><td><code>::first-line</code></td><td>匹配包含此伪元素的元素的第一行。</td></tr><tr><td><code>::grammar-error</code></td><td>匹配文档中包含了浏览器标记的语法错误的那部分。</td></tr><tr><td><code>::selection</code></td><td>匹配文档中被选择的那部分。</td></tr><tr><td><code>::spelling-error</code></td><td>匹配文档中包含了浏览器标记的拼写错误的那部分。</td></tr></tbody></table><h2 id="_5、伪类和伪元素" tabindex="-1">5、伪类和伪元素 <a class="header-anchor" href="#_5、伪类和伪元素" aria-label="Permalink to &quot;5、伪类和伪元素&quot;">​</a></h2><p>伪元素 : 在内容元素的前后插入额外的元素或样式,但是这些元素实际上并不在文档中生成.它们只在外部显示可见,但不会在文档的源代码中找到它们,因此,称为“伪”元素.伪元素类似于增添一个新的 DOM 节点到 DOM 树中,而不是改变元素的状态.注意了,这里是类似,而不是真的增加一个节点,这也是其被称为伪元素的原因（实质上,元素被创建在文档外）.</p><p>伪类 : 将特殊的效果添加到特定选择器上.它是已有元素上添加类别的,不会产生新的元素.伪类就是一个选择处于特定状态的元素的选择器,比如某一个 clsss 的第一个元素,某个被 hover 的元素等等,我们可以理解成一个特定的 CSS 类,但与普通的类不一样,它只有处于 DOM 树无法描述的状态下才能为元素添加样式,所以将其称为伪类.</p><p>总结：（1）伪类是通过在元素选择器上加⼊伪类改变元素状态,⽽伪元素通过对元素的操作进⾏对元素的改变.（2）伪类是操作文档中已有的元素,而伪元素是创建了一个文档外的元素.（3）为了书写 CSS 时进行区分,一般伪类是单冒号,如: hover,而伪元素是双冒号::before.</p>',9),a=[c];function i(n,l,s,h,p,f){return d(),e("div",null,a)}const _=t(r,[["render",i]]);export{u as __pageData,_ as default};
