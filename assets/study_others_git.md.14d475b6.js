import{_ as s,c as a,o as l,Q as p}from"./chunks/framework.00751356.js";const E=JSON.parse('{"title":"git","description":"","frontmatter":{},"headers":[],"relativePath":"study/others/git.md","filePath":"study/others/git.md"}'),n={name:"study/others/git.md"},o=p(`<h1 id="git" tabindex="-1">git <a class="header-anchor" href="#git" aria-label="Permalink to &quot;git&quot;">​</a></h1><h2 id="git-常见操作" tabindex="-1">git 常见操作 <a class="header-anchor" href="#git-常见操作" aria-label="Permalink to &quot;git 常见操作&quot;">​</a></h2><ol><li><p><strong>初始化仓库</strong>：在现有目录中，运行以下命令以将其转化为 Git 仓库：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">init</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">init</span></span></code></pre></div></li><li><p><strong>克隆仓库</strong>：从远程仓库克隆一个副本到本地：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">clone</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">远程仓库UR</span><span style="color:#E1E4E8;">L</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">clone</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">远程仓库UR</span><span style="color:#24292E;">L</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div></li><li><p><strong>添加文件</strong>：将文件添加到 Git 仓库，以便跟踪更改：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">add</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">文件</span><span style="color:#E1E4E8;">名</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">文件</span><span style="color:#24292E;">名</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div></li><li><p><strong>提交更改</strong>：将添加的文件提交到本地仓库，并附带一条描述性的提交消息：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">commit</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-m</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;提交消息&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">commit</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-m</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;提交消息&quot;</span></span></code></pre></div></li><li><p><strong>查看状态</strong>：查看当前仓库的文件状态，包括未跟踪、已修改和已暂存的文件：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">status</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">status</span></span></code></pre></div></li><li><p><strong>查看提交历史</strong>：查看提交历史记录，包括提交的作者、日期和消息：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">log</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">log</span></span></code></pre></div></li><li><p><strong>创建分支</strong>：创建新的分支，用于开发新功能或修复 bug：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">branch</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">分支</span><span style="color:#E1E4E8;">名</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">branch</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">分支</span><span style="color:#24292E;">名</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div></li><li><p><strong>切换分支</strong>：切换到其他分支：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">checkout</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">分支</span><span style="color:#E1E4E8;">名</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">checkout</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">分支</span><span style="color:#24292E;">名</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div></li><li><p><strong>合并分支</strong>：将一个分支的更改合并到当前分支：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">merge</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">其他分支</span><span style="color:#E1E4E8;">名</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">merge</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">其他分支</span><span style="color:#24292E;">名</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div></li><li><p><strong>拉取更新</strong>：从远程仓库拉取最新的更改：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pull</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pull</span></span></code></pre></div></li><li><p><strong>推送更改</strong>：将本地更改推送到远程仓库：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">push</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">push</span></span></code></pre></div></li><li><p><strong>撤销更改</strong>：撤销未提交的更改：</p><ul><li>撤销工作区中的更改：<code>git checkout -- &lt;文件名&gt;</code></li><li>撤销已暂存的更改：<code>git reset HEAD &lt;文件名&gt;</code></li></ul></li><li><p><strong>删除文件</strong>：从 Git 仓库和文件系统中删除文件：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rm</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">文件</span><span style="color:#E1E4E8;">名</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rm</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">文件</span><span style="color:#24292E;">名</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div></li></ol><h2 id="git-rebase-git-merge" tabindex="-1">git rebase &amp; git merge <a class="header-anchor" href="#git-rebase-git-merge" aria-label="Permalink to &quot;git rebase &amp; git merge&quot;">​</a></h2><ol><li><p><code>git merge</code>：</p><p><code>git merge</code> 用于将一个分支的更改合并到当前分支。合并后的历史将保留分支的历史记录，形成一个新的合并提交。这通常用于合并独立开发的功能分支或修复分支到主分支。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 切换到目标分支（例如主分支）</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">checkout</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 合并其他分支到当前分支</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">merge</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">feature-branch</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 切换到目标分支（例如主分支）</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">checkout</span><span style="color:#24292E;"> </span><span style="color:#032F62;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 合并其他分支到当前分支</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">merge</span><span style="color:#24292E;"> </span><span style="color:#032F62;">feature-branch</span></span></code></pre></div><p>合并示例：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">       A---B---C (main)</span></span>
<span class="line"><span style="color:#e1e4e8;">            \\</span></span>
<span class="line"><span style="color:#e1e4e8;">             D---E (feature-branch)</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;"># 执行 git merge feature-branch 后</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">       A---B---C---F (main)</span></span>
<span class="line"><span style="color:#e1e4e8;">            \\       /</span></span>
<span class="line"><span style="color:#e1e4e8;">             D---E (feature-branch)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">       A---B---C (main)</span></span>
<span class="line"><span style="color:#24292e;">            \\</span></span>
<span class="line"><span style="color:#24292e;">             D---E (feature-branch)</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;"># 执行 git merge feature-branch 后</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">       A---B---C---F (main)</span></span>
<span class="line"><span style="color:#24292e;">            \\       /</span></span>
<span class="line"><span style="color:#24292e;">             D---E (feature-branch)</span></span></code></pre></div></li><li><p><code>git rebase</code>：</p><p><code>git rebase</code> 也用于合并分支，但它执行的是基于某一分支的更改，将它们应用到另一分支上，然后重写历史，使得合并后的历史线更加线性。这通常用于保持一个干净的、直观的提交历史。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 切换到要将更改合并到的分支（例如主分支）</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">checkout</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 使用 rebase 将另一个分支（例如功能分支）的更改应用到当前分支</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rebase</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">feature-branch</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 切换到要将更改合并到的分支（例如主分支）</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">checkout</span><span style="color:#24292E;"> </span><span style="color:#032F62;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 使用 rebase 将另一个分支（例如功能分支）的更改应用到当前分支</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rebase</span><span style="color:#24292E;"> </span><span style="color:#032F62;">feature-branch</span></span></code></pre></div><p>重新基础合并示例：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">       A---B---C (main)</span></span>
<span class="line"><span style="color:#e1e4e8;">            \\</span></span>
<span class="line"><span style="color:#e1e4e8;">             D---E (feature-branch)</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;"># 执行 git rebase feature-branch 后</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">       A---B---C---D---E (main)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">       A---B---C (main)</span></span>
<span class="line"><span style="color:#24292e;">            \\</span></span>
<span class="line"><span style="color:#24292e;">             D---E (feature-branch)</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;"># 执行 git rebase feature-branch 后</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">       A---B---C---D---E (main)</span></span></code></pre></div></li></ol><p>关键区别：</p><ul><li><code>git merge</code> 会创建一个新的合并提交，保留原始分支的历史记录，但可能导致分支历史变得杂乱。</li><li><code>git rebase</code> 将分支更改应用到目标分支，并重新构建一个线性历史，但会改写提交历史。</li></ul><p>选择使用哪种方法取决于您的需求。如果您想保留分支历史，使用 <code>git merge</code>。如果您想保持干净、线性的历史，可以使用 <code>git rebase</code>，但要注意它可能会导致冲突。</p><h2 id="git-stash" tabindex="-1">git stash <a class="header-anchor" href="#git-stash" aria-label="Permalink to &quot;git stash&quot;">​</a></h2><p><code>git stash</code> 是 Git 中一个有用的命令，用于临时保存您的工作目录中的更改，以便您可以切换到其他分支或执行其他任务而不必提交或取消更改。它的主要用途是在工作正在进行中但需要进行其他操作时，临时隐藏或保存当前未提交的更改。</p><p>以下是 <code>git stash</code> 的一些常见用法和示例：</p><ol><li><p><strong>保存工作目录中的更改</strong>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">stash</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">stash</span></span></code></pre></div><p>这将保存当前工作目录中的未提交更改并将其存储在一个新的存储区（stash）中。您可以继续执行其他任务，如切换分支，而不用担心这些未提交的更改。</p></li><li><p><strong>查看 stash 列表</strong>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">stash</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">list</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">stash</span><span style="color:#24292E;"> </span><span style="color:#032F62;">list</span></span></code></pre></div><p>这将显示存储区中的所有 stash 条目的列表。</p></li><li><p><strong>应用 stash 中的更改</strong>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">stash</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">apply</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">stash</span><span style="color:#24292E;"> </span><span style="color:#032F62;">apply</span></span></code></pre></div><p>这将应用最新的 stash 中的更改到当前分支，并保留 stash 中的内容。如果您想应用特定 stash，请使用 <code>git stash apply stash@{n}</code>，其中 <code>n</code> 是 stash 的索引号。</p></li><li><p><strong>删除 stash 条目</strong>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">stash</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">drop</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">stash</span><span style="color:#24292E;"> </span><span style="color:#032F62;">drop</span></span></code></pre></div><p>这将删除最新的 stash 条目。如果您想删除特定 stash，请使用 <code>git stash drop stash@{n}</code>。</p></li><li><p><strong>应用并删除 stash 中的更改</strong>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">stash</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pop</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">stash</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pop</span></span></code></pre></div><p>这将应用并删除最新的 stash 条目。</p></li><li><p><strong>清空所有 stash 条目</strong>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">stash</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">clear</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">stash</span><span style="color:#24292E;"> </span><span style="color:#032F62;">clear</span></span></code></pre></div><p>这将清空所有 stash 条目，慎用，因为它会永久删除所有 stash 内容。</p></li></ol><p><code>git stash</code> 对于在处理多个任务时暂存当前任务的更改非常有用。您可以在切换分支、修复 bug 或处理其他任务时使用它，然后随时返回并应用之前的更改。</p><h2 id="git-checkout" tabindex="-1">git checkout <a class="header-anchor" href="#git-checkout" aria-label="Permalink to &quot;git checkout&quot;">​</a></h2><p><code>git checkout</code> 是 Git 中的一个重要命令，它用于在不同的分支之间切换、查看历史版本或恢复文件。<code>git checkout</code> 具有多种用法，具体取决于您希望执行的操作。以下是一些常见的用法：</p><ol><li><p><strong>切换分支</strong>：</p><ul><li>用于切换到已存在的分支，例如，从主分支切换到功能分支。</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">checkout</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">branch-name</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">checkout</span><span style="color:#24292E;"> </span><span style="color:#032F62;">branch-name</span></span></code></pre></div></li><li><p><strong>创建并切换分支</strong>：</p><ul><li>用于创建一个新分支并立即切换到该分支。</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">checkout</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-b</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">new-branch</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">checkout</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-b</span><span style="color:#24292E;"> </span><span style="color:#032F62;">new-branch</span></span></code></pre></div></li><li><p><strong>查看历史版本</strong>：</p><ul><li>用于查看历史提交的内容，可以提供提交的哈希值或分支名。</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">checkout</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">commit-hash</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">checkout</span><span style="color:#24292E;"> </span><span style="color:#032F62;">commit-hash</span></span></code></pre></div></li><li><p><strong>检出单个文件</strong>：</p><ul><li>用于恢复单个文件到特定提交的状态。</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">checkout</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">commit-hash</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">file-name</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">checkout</span><span style="color:#24292E;"> </span><span style="color:#032F62;">commit-hash</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--</span><span style="color:#24292E;"> </span><span style="color:#032F62;">file-name</span></span></code></pre></div></li><li><p><strong>切换回上一个分支</strong>：</p><ul><li>用于返回到之前的分支，通常与 <code>git checkout -b</code> 配合使用。</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">checkout</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">-</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">checkout</span><span style="color:#24292E;"> </span><span style="color:#032F62;">-</span></span></code></pre></div></li><li><p><strong>创建分离头状态</strong>：</p><ul><li>用于查看历史提交而不在分支上工作，这将创建一个分离头状态。</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">checkout</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">commit-hash</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">checkout</span><span style="color:#24292E;"> </span><span style="color:#032F62;">commit-hash</span></span></code></pre></div></li><li><p><strong>切换回最新提交</strong>：</p><ul><li>用于将分支恢复到最新提交的状态。</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">checkout</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">HEAD</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">checkout</span><span style="color:#24292E;"> </span><span style="color:#032F62;">HEAD</span></span></code></pre></div></li><li><p><strong>切换到标签</strong>：</p><ul><li>用于切换到特定的标签。</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">checkout</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">tag-name</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">checkout</span><span style="color:#24292E;"> </span><span style="color:#032F62;">tag-name</span></span></code></pre></div></li></ol><p>请注意，<code>git checkout</code> 在不同的上下文中有不同的用法，因此确保在使用时了解您希望执行的操作。这些命令可以帮助您在 Git 中导航、管理分支和版本历史，以及恢复文件。</p><h2 id="git-可视化工具" tabindex="-1">git 可视化工具 <a class="header-anchor" href="#git-可视化工具" aria-label="Permalink to &quot;git 可视化工具&quot;">​</a></h2><ul><li>GitHub Desktop</li><li>fork</li><li>Sourcetree</li><li>IDEA</li></ul>`,19),e=[o];function t(c,i,r,d,y,g){return l(),a("div",null,e)}const u=s(n,[["render",t]]);export{E as __pageData,u as default};
